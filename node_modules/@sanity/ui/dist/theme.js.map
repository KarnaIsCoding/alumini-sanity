{"version":3,"file":"theme.js","sources":["../src/theme/build/_deprecated/color/_selectable/createSelectableTones.ts","../src/theme/build/_deprecated/color/_solid/createSolidTones.ts","../src/theme/build/_deprecated/color/button/createButtonTones.ts","../src/theme/build/_deprecated/color/button/createButtonModes.ts","../src/theme/build/_deprecated/color/card/createCardStates.ts","../src/theme/build/_deprecated/color/defaults.ts","../src/theme/build/_deprecated/color/input/createInputModes.ts","../src/theme/build/_deprecated/color/muted/createMuted.ts","../src/theme/build/_deprecated/color/spot/createSpot.ts","../src/theme/build/_deprecated/color/factory.ts","../src/theme/defaults/fonts.ts","../src/theme/versioning/is_v0.ts","../src/theme/versioning/is_v2.ts","../src/theme/versioning/v0_v2.ts","../src/theme/versioning/v2_v0.ts","../src/theme/system/color/_constants.ts","../src/theme/system/color/_helpers.ts","../src/theme/config/system.ts","../src/theme/config/tokens/parseTokenKey.ts","../src/theme/config/tokens/parseTokenValue.ts","../src/theme/config/helpers.ts","../src/theme/build/colorToken/compileColorToken.ts","../src/theme/build/colorToken/colorToken.ts","../src/theme/defaults/colorTokens.ts","../src/theme/build/lib/isRecord.ts","../src/theme/build/merge.ts","../src/theme/build/resolveColorTokens.ts","../src/theme/build/buildColorTheme.ts","../src/theme/defaults/colorPalette.ts","../src/theme/build/lib/color-fns/blend/mix.ts","../src/theme/build/lib/color-fns/blend/multiply.ts","../src/theme/build/lib/color-fns/blend/screen.ts","../src/theme/build/lib/utils.ts","../src/theme/build/lib/color-fns/convert.ts","../src/theme/build/lib/color-fns/parse.ts","../src/theme/build/lib/color-fns/contrastRatio.ts","../src/theme/build/lib/color-fns/rgba.ts","../src/theme/build/mixThemeColor.ts","../src/theme/build/renderColorValue.ts","../src/theme/build/renderColorTheme.ts","../src/theme/build/buildTheme.ts","../src/theme/getScopedTheme.ts"],"sourcesContent":["import {\n  ThemeColorBase,\n  ThemeColorMuted,\n  ThemeColorSelectable,\n  ThemeColorSelectableStates,\n  ThemeColorSolid,\n} from '../../../../system'\nimport {ThemeColorBuilderOpts} from '../factory'\n\nexport function createSelectableTones(\n  opts: ThemeColorBuilderOpts,\n  base: ThemeColorBase,\n  dark: boolean,\n  solid: ThemeColorSolid,\n  muted: ThemeColorMuted,\n): ThemeColorSelectable {\n  return {\n    default: _createSelectableStates(opts, base, dark, solid, muted, 'default'),\n    primary: _createSelectableStates(opts, base, dark, solid, muted, 'primary'),\n    positive: _createSelectableStates(opts, base, dark, solid, muted, 'positive'),\n    caution: _createSelectableStates(opts, base, dark, solid, muted, 'caution'),\n    critical: _createSelectableStates(opts, base, dark, solid, muted, 'critical'),\n  }\n}\n\nfunction _createSelectableStates(\n  opts: ThemeColorBuilderOpts,\n  base: ThemeColorBase,\n  dark: boolean,\n  solid: ThemeColorSolid,\n  muted: ThemeColorMuted,\n  tone: 'default' | 'primary' | 'positive' | 'caution' | 'critical',\n): ThemeColorSelectableStates {\n  return {\n    enabled: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: 'enabled',\n      tone,\n    }),\n    hovered: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: 'hovered',\n      tone,\n    }),\n    pressed: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: 'pressed',\n      tone,\n    }),\n    selected: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: 'selected',\n      tone,\n    }),\n    disabled: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: 'disabled',\n      tone,\n    }),\n  }\n}\n","import {ThemeColorBase, ThemeColorSolid, ThemeColorName} from '../../../../system'\nimport {ThemeColorBuilderOpts} from '../factory'\n\nexport function createSolidTones(\n  opts: ThemeColorBuilderOpts,\n  base: ThemeColorBase,\n  dark: boolean,\n  name: ThemeColorName,\n): ThemeColorSolid {\n  return {\n    default: {\n      enabled: opts.solid({base, dark, tone: 'default', name, state: 'enabled'}),\n      disabled: opts.solid({base, dark, tone: 'default', name, state: 'disabled'}),\n      hovered: opts.solid({base, dark, tone: 'default', name, state: 'hovered'}),\n      pressed: opts.solid({base, dark, tone: 'default', name, state: 'pressed'}),\n      selected: opts.solid({base, dark, tone: 'default', name, state: 'selected'}),\n    },\n    transparent: {\n      enabled: opts.solid({base, dark, tone: 'transparent', name, state: 'enabled'}),\n      disabled: opts.solid({base, dark, tone: 'transparent', name, state: 'disabled'}),\n      hovered: opts.solid({base, dark, tone: 'transparent', name, state: 'hovered'}),\n      pressed: opts.solid({base, dark, tone: 'transparent', name, state: 'pressed'}),\n      selected: opts.solid({base, dark, tone: 'transparent', name, state: 'selected'}),\n    },\n    primary: {\n      enabled: opts.solid({base, dark, tone: 'primary', name, state: 'enabled'}),\n      disabled: opts.solid({base, dark, tone: 'primary', name, state: 'disabled'}),\n      hovered: opts.solid({base, dark, tone: 'primary', name, state: 'hovered'}),\n      pressed: opts.solid({base, dark, tone: 'primary', name, state: 'pressed'}),\n      selected: opts.solid({base, dark, tone: 'primary', name, state: 'selected'}),\n    },\n    positive: {\n      enabled: opts.solid({base, dark, tone: 'positive', name, state: 'enabled'}),\n      disabled: opts.solid({base, dark, tone: 'positive', name, state: 'disabled'}),\n      hovered: opts.solid({base, dark, tone: 'positive', name, state: 'hovered'}),\n      pressed: opts.solid({base, dark, tone: 'positive', name, state: 'pressed'}),\n      selected: opts.solid({base, dark, tone: 'positive', name, state: 'selected'}),\n    },\n    caution: {\n      enabled: opts.solid({base, dark, tone: 'caution', name, state: 'enabled'}),\n      disabled: opts.solid({base, dark, tone: 'caution', name, state: 'disabled'}),\n      hovered: opts.solid({base, dark, tone: 'caution', name, state: 'hovered'}),\n      pressed: opts.solid({base, dark, tone: 'caution', name, state: 'pressed'}),\n      selected: opts.solid({base, dark, tone: 'caution', name, state: 'selected'}),\n    },\n    critical: {\n      enabled: opts.solid({base, dark, tone: 'critical', name, state: 'enabled'}),\n      disabled: opts.solid({base, dark, tone: 'critical', name, state: 'disabled'}),\n      hovered: opts.solid({base, dark, tone: 'critical', name, state: 'hovered'}),\n      pressed: opts.solid({base, dark, tone: 'critical', name, state: 'pressed'}),\n      selected: opts.solid({base, dark, tone: 'critical', name, state: 'selected'}),\n    },\n  }\n}\n","import {\n  ThemeColorBase,\n  ThemeColorButtonModeKey,\n  ThemeColorButtonTones,\n  ThemeColorMuted,\n  ThemeColorSolid,\n} from '../../../../system'\nimport {ThemeColorBuilderOpts} from '../factory'\n\nexport function createButtonTones(\n  opts: ThemeColorBuilderOpts,\n  base: ThemeColorBase,\n  dark: boolean,\n  solid: ThemeColorSolid,\n  muted: ThemeColorMuted,\n  mode: ThemeColorButtonModeKey,\n): ThemeColorButtonTones {\n  return {\n    default: opts.button({\n      base,\n      dark,\n      solid: solid.default,\n      muted: muted.default,\n      mode,\n    }),\n    primary: opts.button({\n      base,\n      dark,\n      solid: solid.primary,\n      muted: muted.primary,\n      mode,\n    }),\n    positive: opts.button({\n      base,\n      dark,\n      solid: solid.positive,\n      muted: muted.positive,\n      mode,\n    }),\n    caution: opts.button({\n      base,\n      dark,\n      solid: solid.caution,\n      muted: muted.caution,\n      mode,\n    }),\n    critical: opts.button({\n      base,\n      dark,\n      solid: solid.critical,\n      muted: muted.critical,\n      mode,\n    }),\n  }\n}\n","import {\n  ThemeColorBase,\n  ThemeColorButton,\n  ThemeColorMuted,\n  ThemeColorSolid,\n} from '../../../../system'\nimport {ThemeColorBuilderOpts} from '../factory'\nimport {createButtonTones} from './createButtonTones'\n\nexport function createButtonModes(\n  opts: ThemeColorBuilderOpts,\n  base: ThemeColorBase,\n  dark: boolean,\n  solid: ThemeColorSolid,\n  muted: ThemeColorMuted,\n): ThemeColorButton {\n  return {\n    default: createButtonTones(opts, base, dark, solid, muted, 'default'),\n    ghost: createButtonTones(opts, base, dark, solid, muted, 'ghost'),\n    bleed: createButtonTones(opts, base, dark, solid, muted, 'bleed'),\n  }\n}\n","import {\n  ThemeColorBase,\n  ThemeColorCard,\n  ThemeColorMuted,\n  ThemeColorSolid,\n  ThemeColorName,\n} from '../../../../system'\nimport {ThemeColorBuilderOpts} from '../factory'\n\nexport function createCardStates(\n  opts: ThemeColorBuilderOpts,\n  base: ThemeColorBase,\n  dark: boolean,\n  name: ThemeColorName,\n  solid: ThemeColorSolid,\n  muted: ThemeColorMuted,\n): ThemeColorCard {\n  return {\n    enabled: opts.card({\n      base,\n      dark,\n      name,\n      state: 'enabled',\n      solid,\n      muted,\n    }),\n    disabled: opts.card({\n      base,\n      dark,\n      name,\n      state: 'disabled',\n      solid,\n      muted,\n    }),\n    hovered: opts.card({\n      base,\n      dark,\n      name,\n      state: 'hovered',\n      solid,\n      muted,\n    }),\n    pressed: opts.card({\n      base,\n      dark,\n      name,\n      state: 'pressed',\n      solid,\n      muted,\n    }),\n    selected: opts.card({\n      base,\n      dark,\n      name,\n      state: 'selected',\n      solid,\n      muted,\n    }),\n  }\n}\n","import {ThemeColorBuilderOpts} from './factory'\n\nconst black = 'hsl(0, 0%, 0%)'\nconst white = 'hsl(0, 0%, 100%)'\n\nconst colors = {\n  default: {\n    lightest: 'hsl(0, 0%, 95%)',\n    lighter: 'hsl(0, 0%, 70%)',\n    light: 'hsl(0, 0%, 65%)',\n    base: 'hsl(0, 0%, 50%)',\n    dark: 'hsl(0, 0%, 35%)',\n    darker: 'hsl(0, 0%, 20%)',\n    darkest: 'hsl(0, 0%, 5%)',\n  },\n  transparent: {\n    lightest: 'hsl(240, 100%, 95%)',\n    lighter: 'hsl(240, 100%, 70%)',\n    light: 'hsl(240, 100%, 65%)',\n    base: 'hsl(240, 100%, 50%)',\n    dark: 'hsl(240, 100%, 35%)',\n    darker: 'hsl(240, 100%, 20%)',\n    darkest: 'hsl(240, 100%, 5%)',\n  },\n  primary: {\n    lightest: 'hsl(240, 100%, 95%)',\n    lighter: 'hsl(240, 100%, 70%)',\n    light: 'hsl(240, 100%, 65%)',\n    base: 'hsl(240, 100%, 50%)',\n    dark: 'hsl(240, 100%, 35%)',\n    darker: 'hsl(240, 100%, 20%)',\n    darkest: 'hsl(240, 100%, 5%)',\n  },\n  positive: {\n    lightest: 'hsl(120, 100%, 95%)',\n    lighter: 'hsl(120, 100%, 70%)',\n    light: 'hsl(120, 100%, 65%)',\n    base: 'hsl(120, 100%, 50%)',\n    dark: 'hsl(120, 100%, 35%)',\n    darker: 'hsl(120, 100%, 20%)',\n    darkest: 'hsl(120, 100%, 5%)',\n  },\n  caution: {\n    lightest: 'hsl(60, 100%, 95%)',\n    lighter: 'hsl(60, 100%, 70%)',\n    light: 'hsl(60, 100%, 65%)',\n    base: 'hsl(60, 100%, 50%)',\n    dark: 'hsl(60, 100%, 35%)',\n    darker: 'hsl(60, 100%, 20%)',\n    darkest: 'hsl(60, 100%, 5%)',\n  },\n  critical: {\n    lightest: 'hsl(0, 100%, 95%)',\n    lighter: 'hsl(0, 100%, 70%)',\n    light: 'hsl(0, 100%, 65%)',\n    base: 'hsl(0, 100%, 50%)',\n    dark: 'hsl(0, 100%, 35%)',\n    darker: 'hsl(0, 100%, 20%)',\n    darkest: 'hsl(0, 100%, 5%)',\n  },\n}\n\nconst spots = {\n  gray: 'hsl(0, 0%, 50%)',\n  red: 'hsl(0, 100%, 50%)',\n  orange: 'hsl(30, 100%, 50%)',\n  yellow: 'hsl(60, 100%, 50%)',\n  green: 'hsl(120, 100%, 50%)',\n  cyan: 'hsl(180, 100%, 50%)',\n  blue: 'hsl(240, 100%, 50%)',\n  purple: 'hsl(270, 100%, 50%)',\n  magenta: 'hsl(300, 100%, 50%)',\n}\n\nconst tones = {\n  transparent: {\n    bg: [colors.transparent.darkest, colors.transparent.lightest],\n    fg: [colors.transparent.lightest, colors.transparent.darkest],\n    border: [colors.transparent.darker, colors.transparent.lighter],\n    focusRing: [colors.transparent.base, colors.transparent.base],\n  },\n  primary: {\n    bg: [colors.primary.darkest, colors.primary.lightest],\n    fg: [colors.primary.lightest, colors.primary.darkest],\n    border: [colors.primary.darker, colors.primary.lighter],\n    focusRing: [colors.primary.base, colors.primary.base],\n  },\n  positive: {\n    bg: [colors.positive.darkest, colors.positive.lightest],\n    fg: [colors.positive.lightest, colors.positive.darkest],\n    border: [colors.positive.darker, colors.positive.lighter],\n    focusRing: [colors.positive.base, colors.positive.base],\n  },\n  caution: {\n    bg: [colors.caution.darkest, colors.caution.lightest],\n    fg: [colors.caution.lightest, colors.caution.darkest],\n    border: [colors.caution.darker, colors.caution.lighter],\n    focusRing: [colors.caution.base, colors.caution.base],\n  },\n  critical: {\n    bg: [colors.critical.darkest, colors.critical.lightest],\n    fg: [colors.critical.lightest, colors.critical.darkest],\n    border: [colors.critical.darker, colors.critical.lighter],\n    focusRing: [colors.critical.base, colors.critical.base],\n  },\n}\n\nexport const defaultOpts: ThemeColorBuilderOpts = {\n  base: ({dark, name}) => {\n    if (name === 'default') {\n      return {\n        bg: dark ? black : white,\n        fg: dark ? white : black,\n        border: dark ? colors.default.darkest : colors.default.lightest,\n        focusRing: colors.primary.base,\n        shadow: {\n          outline: black,\n          umbra: black,\n          penumbra: black,\n          ambient: black,\n        },\n        skeleton: {\n          from: dark ? white : black,\n          to: dark ? white : black,\n        },\n      }\n    }\n\n    // Variants:\n    // - primary\n    // - positive\n    // - caution\n    // - critical\n    return {\n      bg: tones[name].bg[dark ? 0 : 1],\n      fg: tones[name].fg[dark ? 0 : 1],\n      border: tones[name].border[dark ? 0 : 1],\n      focusRing: tones[name].focusRing[dark ? 0 : 1],\n      shadow: {\n        outline: black,\n        umbra: black,\n        penumbra: black,\n        ambient: black,\n      },\n      skeleton: {\n        from: dark ? white : black,\n        to: dark ? white : black,\n      },\n    }\n  },\n\n  solid: ({base, dark, state, tone}) => {\n    const color = colors[tone]\n\n    if (state === 'hovered') {\n      return {\n        bg: dark ? color.light : color.dark,\n        bg2: dark ? color.light : color.dark,\n        border: dark ? color.lighter : color.darker,\n        fg: dark ? color.darkest : color.lightest,\n        icon: dark ? color.darkest : color.lightest,\n        muted: {\n          fg: black,\n        },\n        accent: {\n          fg: black,\n        },\n        link: {\n          fg: black,\n        },\n        code: {\n          bg: black,\n          fg: black,\n        },\n        skeleton: base.skeleton,\n      }\n    }\n\n    return {\n      bg: color.base,\n      bg2: color.base,\n      border: dark ? color.light : color.dark,\n      fg: dark ? color.darkest : color.lightest,\n      icon: dark ? color.darkest : color.lightest,\n      muted: {\n        fg: black,\n      },\n      accent: {\n        fg: black,\n      },\n      link: {\n        fg: black,\n      },\n      code: {\n        bg: black,\n        fg: black,\n      },\n      skeleton: base.skeleton,\n    }\n  },\n\n  muted: ({base, dark, state, tone}) => {\n    const color = colors[tone]\n\n    if (state === 'hovered') {\n      return {\n        bg: dark ? color.darker : color.lighter,\n        bg2: dark ? color.darker : color.lighter,\n        border: dark ? color.lighter : color.darker,\n        fg: dark ? color.lightest : color.darkest,\n        icon: dark ? color.lightest : color.darkest,\n        muted: {\n          fg: black,\n        },\n        accent: {\n          fg: black,\n        },\n        link: {\n          fg: black,\n        },\n        code: {\n          bg: black,\n          fg: black,\n        },\n        skeleton: base.skeleton,\n      }\n    }\n\n    return {\n      bg: dark ? color.darkest : color.lightest,\n      bg2: dark ? color.darkest : color.lightest,\n      border: dark ? color.darker : color.lighter,\n      fg: dark ? color.lighter : color.darker,\n      icon: dark ? color.lighter : color.darker,\n      muted: {\n        fg: black,\n      },\n      accent: {\n        fg: black,\n      },\n      link: {\n        fg: black,\n      },\n      code: {\n        bg: black,\n        fg: black,\n      },\n      skeleton: base.skeleton,\n    }\n  },\n\n  button: ({base, mode, muted, solid}) => {\n    if (mode === 'bleed') {\n      return {\n        ...muted,\n        enabled: {\n          bg: 'transparent',\n          bg2: 'transparent',\n          fg: muted.enabled.fg,\n          icon: muted.enabled.fg,\n          border: 'transparent',\n          muted: {\n            fg: black,\n          },\n          accent: {\n            fg: black,\n          },\n          link: {\n            fg: black,\n          },\n          code: {\n            bg: black,\n            fg: black,\n          },\n          skeleton: base.skeleton,\n        },\n        hovered: {\n          bg: muted.enabled.bg,\n          bg2: muted.enabled.bg,\n          fg: muted.hovered.fg,\n          icon: muted.hovered.fg,\n          border: 'transparent',\n          muted: {\n            fg: black,\n          },\n          accent: {\n            fg: black,\n          },\n          link: {\n            fg: black,\n          },\n          code: {\n            bg: black,\n            fg: black,\n          },\n          skeleton: base.skeleton,\n        },\n      }\n    }\n\n    if (mode === 'ghost')\n      return {\n        ...solid,\n        enabled: muted.enabled,\n      }\n\n    return solid\n  },\n\n  card: ({base}) => {\n    return {\n      bg: black,\n      bg2: black,\n      fg: black,\n      icon: black,\n      border: black,\n      muted: {\n        fg: black,\n      },\n      accent: {\n        fg: black,\n      },\n      link: {\n        fg: black,\n      },\n      code: {\n        bg: black,\n        fg: black,\n      },\n      skeleton: base.skeleton,\n    }\n  },\n\n  input: () => {\n    return {\n      bg: black,\n      bg2: black,\n      fg: black,\n      border: black,\n      placeholder: black,\n    }\n  },\n\n  selectable: ({muted, state, tone}) => {\n    return muted[tone][state]\n  },\n\n  spot: ({key}) => {\n    return spots[key]\n  },\n\n  syntax: () => ({\n    atrule: black,\n    attrName: black,\n    attrValue: black,\n    attribute: black,\n    boolean: black,\n    builtin: black,\n    cdata: black,\n    char: black,\n    class: black,\n    className: black,\n    comment: black,\n    constant: black,\n    deleted: black,\n    doctype: black,\n    entity: black,\n    function: black,\n    hexcode: black,\n    id: black,\n    important: black,\n    inserted: black,\n    keyword: black,\n    number: black,\n    operator: black,\n    prolog: black,\n    property: black,\n    pseudoClass: black,\n    pseudoElement: black,\n    punctuation: black,\n    regex: black,\n    selector: black,\n    string: black,\n    symbol: black,\n    tag: black,\n    unit: black,\n    url: black,\n    variable: black,\n  }),\n}\n","import {ThemeColorBase, ThemeColorInput, ThemeColorMuted, ThemeColorSolid} from '../../../../system'\nimport {ThemeColorBuilderOpts} from '../factory'\n\nexport function createInputModes(\n  opts: ThemeColorBuilderOpts,\n  base: ThemeColorBase,\n  dark: boolean,\n  solid: ThemeColorSolid,\n  muted: ThemeColorMuted,\n): ThemeColorInput {\n  return {\n    default: {\n      enabled: opts.input({\n        base,\n        dark,\n        mode: 'default',\n        state: 'enabled',\n        solid: solid.default,\n        muted: muted.default,\n      }),\n      disabled: opts.input({\n        base,\n        dark,\n        mode: 'default',\n        state: 'disabled',\n        solid: solid.default,\n        muted: muted.default,\n      }),\n      hovered: opts.input({\n        base,\n        dark,\n        mode: 'default',\n        state: 'hovered',\n        solid: solid.default,\n        muted: muted.default,\n      }),\n      readOnly: opts.input({\n        base,\n        dark,\n        mode: 'default',\n        state: 'readOnly',\n        solid: solid.default,\n        muted: muted.default,\n      }),\n    },\n    invalid: {\n      enabled: opts.input({\n        base,\n        dark,\n        mode: 'invalid',\n        state: 'enabled',\n        solid: solid.default,\n        muted: muted.default,\n      }),\n      disabled: opts.input({\n        base,\n        dark,\n        mode: 'invalid',\n        state: 'disabled',\n        solid: solid.default,\n        muted: muted.default,\n      }),\n      hovered: opts.input({\n        base,\n        dark,\n        mode: 'invalid',\n        state: 'hovered',\n        solid: solid.default,\n        muted: muted.default,\n      }),\n      readOnly: opts.input({\n        base,\n        dark,\n        mode: 'invalid',\n        state: 'readOnly',\n        solid: solid.default,\n        muted: muted.default,\n      }),\n    },\n  }\n}\n","import {ThemeColorBase, ThemeColorMuted, ThemeColorName} from '../../../../system'\nimport {ThemeColorBuilderOpts} from '../factory'\n\nexport function createMutedTones(\n  opts: ThemeColorBuilderOpts,\n  base: ThemeColorBase,\n  dark: boolean,\n  name: ThemeColorName,\n): ThemeColorMuted {\n  return {\n    default: {\n      enabled: opts.muted({base, dark, tone: 'default', name, state: 'enabled'}),\n      disabled: opts.muted({base, dark, tone: 'default', name, state: 'disabled'}),\n      hovered: opts.muted({base, dark, tone: 'default', name, state: 'hovered'}),\n      pressed: opts.muted({base, dark, tone: 'default', name, state: 'pressed'}),\n      selected: opts.muted({base, dark, tone: 'default', name, state: 'selected'}),\n    },\n    transparent: {\n      enabled: opts.muted({base, dark, tone: 'transparent', name, state: 'enabled'}),\n      disabled: opts.muted({base, dark, tone: 'transparent', name, state: 'disabled'}),\n      hovered: opts.muted({base, dark, tone: 'transparent', name, state: 'hovered'}),\n      pressed: opts.muted({base, dark, tone: 'transparent', name, state: 'pressed'}),\n      selected: opts.muted({base, dark, tone: 'transparent', name, state: 'selected'}),\n    },\n    primary: {\n      enabled: opts.muted({base, dark, tone: 'primary', name, state: 'enabled'}),\n      disabled: opts.muted({base, dark, tone: 'primary', name, state: 'disabled'}),\n      hovered: opts.muted({base, dark, tone: 'primary', name, state: 'hovered'}),\n      pressed: opts.muted({base, dark, tone: 'primary', name, state: 'pressed'}),\n      selected: opts.muted({base, dark, tone: 'primary', name, state: 'selected'}),\n    },\n    positive: {\n      enabled: opts.muted({base, dark, tone: 'positive', name, state: 'enabled'}),\n      disabled: opts.muted({base, dark, tone: 'positive', name, state: 'disabled'}),\n      hovered: opts.muted({base, dark, tone: 'positive', name, state: 'hovered'}),\n      pressed: opts.muted({base, dark, tone: 'positive', name, state: 'pressed'}),\n      selected: opts.muted({base, dark, tone: 'positive', name, state: 'selected'}),\n    },\n    caution: {\n      enabled: opts.muted({base, dark, tone: 'caution', name, state: 'enabled'}),\n      disabled: opts.muted({base, dark, tone: 'caution', name, state: 'disabled'}),\n      hovered: opts.muted({base, dark, tone: 'caution', name, state: 'hovered'}),\n      pressed: opts.muted({base, dark, tone: 'caution', name, state: 'pressed'}),\n      selected: opts.muted({base, dark, tone: 'caution', name, state: 'selected'}),\n    },\n    critical: {\n      enabled: opts.muted({base, dark, tone: 'critical', name, state: 'enabled'}),\n      disabled: opts.muted({base, dark, tone: 'critical', name, state: 'disabled'}),\n      hovered: opts.muted({base, dark, tone: 'critical', name, state: 'hovered'}),\n      pressed: opts.muted({base, dark, tone: 'critical', name, state: 'pressed'}),\n      selected: opts.muted({base, dark, tone: 'critical', name, state: 'selected'}),\n    },\n  }\n}\n","import {ThemeColorBase, ThemeColorSpot} from '../../../../system'\nimport {ThemeColorBuilderOpts} from '../factory'\n\nexport function createSpot(\n  opts: ThemeColorBuilderOpts,\n  base: ThemeColorBase,\n  dark: boolean,\n): ThemeColorSpot {\n  return {\n    gray: opts.spot({base, dark, key: 'gray'}),\n    blue: opts.spot({base, dark, key: 'blue'}),\n    purple: opts.spot({base, dark, key: 'purple'}),\n    magenta: opts.spot({base, dark, key: 'magenta'}),\n    red: opts.spot({base, dark, key: 'red'}),\n    orange: opts.spot({base, dark, key: 'orange'}),\n    yellow: opts.spot({base, dark, key: 'yellow'}),\n    green: opts.spot({base, dark, key: 'green'}),\n    cyan: opts.spot({base, dark, key: 'cyan'}),\n  }\n}\n","import {\n  ThemeColorGenericState,\n  ThemeColorBase,\n  ThemeColorButtonModeKey,\n  ThemeColorButtonStates,\n  ThemeColorInputState,\n  ThemeColorMuted,\n  ThemeColorMutedTone,\n  ThemeColorSolid,\n  ThemeColorSolidTone,\n  ThemeColorSyntax,\n  ThemeColorName,\n  ThemeColorScheme,\n  ThemeColorSchemes,\n  ThemeColor,\n  ThemeColorToneKey,\n  ThemeColorSpotKey,\n} from '../../../system'\nimport {createSelectableTones} from './_selectable/createSelectableTones'\nimport {createSolidTones} from './_solid/createSolidTones'\nimport {createButtonModes} from './button/createButtonModes'\nimport {createCardStates} from './card/createCardStates'\nimport {defaultOpts} from './defaults'\nimport {createInputModes} from './input/createInputModes'\nimport {createMutedTones} from './muted/createMuted'\nimport {createSpot} from './spot/createSpot'\n\n/**\n * @public\n * @deprecated Use `buildColorTheme` instead.\n */\nexport interface ThemeColorBuilderOpts {\n  base: (opts: {dark: boolean; name: ThemeColorName}) => ThemeColorBase\n  solid: (opts: {\n    base: ThemeColorBase\n    dark: boolean\n    tone: ThemeColorName\n    name: ThemeColorName\n    state: 'enabled' | 'disabled' | 'hovered' | 'pressed' | 'selected'\n  }) => ThemeColorGenericState\n  muted: (opts: {\n    base: ThemeColorBase\n    dark: boolean\n    tone: ThemeColorToneKey\n    name: ThemeColorName\n    state: 'enabled' | 'disabled' | 'hovered' | 'pressed' | 'selected'\n  }) => ThemeColorGenericState\n  card: (opts: {\n    base: ThemeColorBase\n    dark: boolean\n    muted: ThemeColorMuted\n    name: ThemeColorName\n    solid: ThemeColorSolid\n    state: 'enabled' | 'disabled' | 'hovered' | 'pressed' | 'selected'\n  }) => ThemeColorGenericState\n  button: (opts: {\n    dark: boolean\n    mode: ThemeColorButtonModeKey\n    base: ThemeColorBase\n    solid: ThemeColorSolidTone\n    muted: ThemeColorMutedTone\n  }) => ThemeColorButtonStates\n  input: (opts: {\n    base: ThemeColorBase\n    solid: ThemeColorSolidTone\n    muted: ThemeColorMutedTone\n    dark: boolean\n    mode: 'default' | 'invalid'\n    state: 'enabled' | 'disabled' | 'hovered' | 'readOnly'\n  }) => ThemeColorInputState\n  selectable: (opts: {\n    dark: boolean\n    base: ThemeColorBase\n    solid: ThemeColorSolid\n    muted: ThemeColorMuted\n    state: 'enabled' | 'disabled' | 'hovered' | 'pressed' | 'selected'\n    tone: 'default' | 'primary' | 'positive' | 'caution' | 'critical'\n  }) => ThemeColorGenericState\n  syntax: (opts: {base: ThemeColorBase; dark: boolean}) => ThemeColorSyntax\n  spot: (opts: {base: ThemeColorBase; dark: boolean; key: ThemeColorSpotKey}) => string\n}\n\n/**\n * @public\n * @deprecated Use `ThemeConfig` instead.\n */\nexport type PartialThemeColorBuilderOpts = Partial<ThemeColorBuilderOpts>\n\n/**\n * @public\n * @deprecated Use `buildColorTheme` instead.\n */\nexport function createColorTheme(\n  partialOpts: PartialThemeColorBuilderOpts = {},\n): ThemeColorSchemes {\n  const builders: ThemeColorBuilderOpts = {...defaultOpts, ...partialOpts}\n\n  return {\n    light: _createColorScheme(builders, false),\n    dark: _createColorScheme(builders, true),\n  }\n}\n\n/**\n * @internal\n */\nfunction _createColorScheme(opts: ThemeColorBuilderOpts, dark: boolean): ThemeColorScheme {\n  return {\n    default: _createColor(opts, dark, 'default'),\n    transparent: _createColor(opts, dark, 'transparent'),\n    primary: _createColor(opts, dark, 'primary'),\n    positive: _createColor(opts, dark, 'positive'),\n    caution: _createColor(opts, dark, 'caution'),\n    critical: _createColor(opts, dark, 'critical'),\n  }\n}\n\n/**\n * @internal\n */\nfunction _createColor(\n  opts: ThemeColorBuilderOpts,\n  dark: boolean,\n  name: ThemeColorName,\n): ThemeColor {\n  const base = opts.base({dark, name})\n  const solid = createSolidTones(opts, base, dark, name)\n  const muted = createMutedTones(opts, base, dark, name)\n\n  return {\n    base,\n    button: createButtonModes(opts, base, dark, solid, muted),\n    card: createCardStates(opts, base, dark, name, solid, muted),\n    dark,\n    input: createInputModes(opts, base, dark, solid, muted),\n    selectable: createSelectableTones(opts, base, dark, solid, muted),\n    spot: createSpot(opts, base, dark),\n    syntax: opts.syntax({base, dark}),\n    solid,\n    muted,\n  }\n}\n","import {ThemeFonts} from '../system'\n\nexport const defaultThemeFonts: ThemeFonts = {\n  code: {\n    family: 'ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace',\n    weights: {\n      regular: 400,\n      medium: 500,\n      semibold: 600,\n      bold: 700,\n    },\n    sizes: [\n      {\n        ascenderHeight: 4,\n        descenderHeight: 4,\n        fontSize: 10,\n        iconSize: 17,\n        lineHeight: 15,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 5,\n        descenderHeight: 5,\n        fontSize: 13,\n        iconSize: 21,\n        lineHeight: 19,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 6,\n        descenderHeight: 6,\n        fontSize: 16,\n        iconSize: 25,\n        lineHeight: 23,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 7,\n        descenderHeight: 7,\n        fontSize: 19,\n        iconSize: 29,\n        lineHeight: 27,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 8,\n        descenderHeight: 8,\n        fontSize: 22,\n        iconSize: 33,\n        lineHeight: 31,\n        letterSpacing: 0,\n      },\n    ],\n  },\n  heading: {\n    family:\n      'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", Helvetica, Arial, system-ui, sans-serif',\n    weights: {\n      regular: 700,\n      medium: 800,\n      semibold: 900,\n      bold: 900,\n    },\n    sizes: [\n      {\n        ascenderHeight: 5,\n        descenderHeight: 5,\n        fontSize: 13,\n        iconSize: 17,\n        lineHeight: 19,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 6,\n        descenderHeight: 6,\n        fontSize: 16,\n        iconSize: 25,\n        lineHeight: 23,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 7,\n        descenderHeight: 7,\n        fontSize: 21,\n        iconSize: 33,\n        lineHeight: 29,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 8,\n        descenderHeight: 8,\n        fontSize: 27,\n        iconSize: 41,\n        lineHeight: 35,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 9.5,\n        descenderHeight: 8.5,\n        fontSize: 33,\n        iconSize: 49,\n        lineHeight: 41,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 10.5,\n        descenderHeight: 9.5,\n        fontSize: 38,\n        iconSize: 53,\n        lineHeight: 47,\n        letterSpacing: 0,\n      },\n    ],\n  },\n  label: {\n    family:\n      'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", system-ui, sans-serif',\n    weights: {\n      regular: 600,\n      medium: 700,\n      semibold: 800,\n      bold: 900,\n    },\n    sizes: [\n      {\n        ascenderHeight: 2,\n        descenderHeight: 2,\n        fontSize: 8.1,\n        iconSize: 13,\n        lineHeight: 10,\n        letterSpacing: 0.5,\n      },\n      {\n        ascenderHeight: 2,\n        descenderHeight: 2,\n        fontSize: 9.5,\n        iconSize: 15,\n        lineHeight: 11,\n        letterSpacing: 0.5,\n      },\n      {\n        ascenderHeight: 2,\n        descenderHeight: 2,\n        fontSize: 10.8,\n        iconSize: 17,\n        lineHeight: 12,\n        letterSpacing: 0.5,\n      },\n      {\n        ascenderHeight: 2,\n        descenderHeight: 2,\n        fontSize: 12.25,\n        iconSize: 19,\n        lineHeight: 13,\n        letterSpacing: 0.5,\n      },\n      {\n        ascenderHeight: 2,\n        descenderHeight: 2,\n        fontSize: 13.6,\n        iconSize: 21,\n        lineHeight: 14,\n        letterSpacing: 0.5,\n      },\n      {\n        ascenderHeight: 2,\n        descenderHeight: 2,\n        fontSize: 15,\n        iconSize: 23,\n        lineHeight: 15,\n        letterSpacing: 0.5,\n      },\n    ],\n  },\n  text: {\n    family:\n      'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", Helvetica, Arial, system-ui, sans-serif',\n    weights: {\n      regular: 400,\n      medium: 500,\n      semibold: 600,\n      bold: 700,\n    },\n    sizes: [\n      {\n        ascenderHeight: 4,\n        descenderHeight: 4,\n        fontSize: 10,\n        iconSize: 17,\n        lineHeight: 15,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 5,\n        descenderHeight: 5,\n        fontSize: 13,\n        iconSize: 21,\n        lineHeight: 19,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 6,\n        descenderHeight: 6,\n        fontSize: 15,\n        iconSize: 25,\n        lineHeight: 23,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 7,\n        descenderHeight: 7,\n        fontSize: 18,\n        iconSize: 29,\n        lineHeight: 27,\n        letterSpacing: 0,\n      },\n      {\n        ascenderHeight: 8,\n        descenderHeight: 8,\n        fontSize: 21,\n        iconSize: 33,\n        lineHeight: 31,\n        letterSpacing: 0,\n      },\n    ],\n  },\n}\n","import {RootTheme, RootTheme_v2} from '../system'\n\n/** @internal */\nexport function is_v0(themeProp: RootTheme | RootTheme_v2): themeProp is RootTheme {\n  return themeProp._version === 0\n}\n","import {RootTheme, RootTheme_v2} from '../system'\n\n/** @internal */\nexport function is_v2(themeProp: RootTheme | RootTheme_v2): themeProp is RootTheme_v2 {\n  return themeProp._version === 2\n}\n","import {defaultThemeConfig} from '../defaults/config'\nimport {RootTheme, RootTheme_v2} from '../system'\nimport {themeColor_v0_v2} from './themeColor_v0_v2'\n\nconst cache = new WeakMap<RootTheme, RootTheme_v2>()\n\n/** @internal */\nexport function v0_v2(v0: RootTheme): RootTheme_v2 {\n  if (v0.v2) return v0.v2\n\n  const cached_v2 = cache.get(v0)\n\n  if (cached_v2) return cached_v2\n\n  const {\n    avatar,\n    button,\n    color,\n    container,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    focusRing: _unused_focusRing,\n    fonts: font,\n    input,\n    layer,\n    media,\n    radius,\n    shadows: shadow,\n    space,\n    styles: style,\n  } = v0\n\n  const v2: RootTheme_v2 = {\n    _version: 2,\n    avatar: {\n      ...defaultThemeConfig.avatar,\n      ...avatar,\n    },\n    button: {\n      ...defaultThemeConfig.button,\n      ...button,\n    },\n    card: defaultThemeConfig.card,\n    color: {\n      light: {\n        transparent: themeColor_v0_v2(color.light.transparent),\n        default: themeColor_v0_v2(color.light.default),\n        neutral: themeColor_v0_v2(color.light.transparent),\n        primary: themeColor_v0_v2(color.light.primary),\n        suggest: themeColor_v0_v2(color.light.primary),\n        positive: themeColor_v0_v2(color.light.positive),\n        caution: themeColor_v0_v2(color.light.caution),\n        critical: themeColor_v0_v2(color.light.critical),\n      },\n      dark: {\n        transparent: themeColor_v0_v2(color.dark.transparent),\n        default: themeColor_v0_v2(color.dark.default),\n        neutral: themeColor_v0_v2(color.dark.transparent),\n        primary: themeColor_v0_v2(color.dark.primary),\n        suggest: themeColor_v0_v2(color.dark.primary),\n        positive: themeColor_v0_v2(color.dark.positive),\n        caution: themeColor_v0_v2(color.dark.caution),\n        critical: themeColor_v0_v2(color.dark.critical),\n      },\n    },\n    container,\n    font,\n    input: {\n      ...defaultThemeConfig.input,\n      ...input,\n      checkbox: {\n        ...defaultThemeConfig.input.checkbox,\n        ...input.checkbox,\n      },\n      radio: {\n        ...defaultThemeConfig.input.radio,\n        ...input.radio,\n      },\n      switch: {\n        ...defaultThemeConfig.input.switch,\n        ...input.switch,\n      },\n    },\n    layer: layer ?? defaultThemeConfig.layer,\n    media,\n    radius,\n    shadow,\n    space,\n    style,\n  }\n\n  cache.set(v0, v2)\n\n  return v2\n}\n","import {\n  RootTheme,\n  RootTheme_v2,\n  ThemeColor,\n  ThemeColorCard_v2,\n  ThemeColorInputMode_v2,\n  ThemeColorInputState,\n  ThemeColorInputState_v2,\n  ThemeColorInputStates,\n} from '../system'\n\nconst cache = new WeakMap<RootTheme_v2, RootTheme>()\n\n/** @internal */\nexport function v2_v0(v2: RootTheme_v2): RootTheme {\n  const cachedTheme = cache.get(v2)\n\n  if (cachedTheme) return cachedTheme\n\n  const {\n    avatar,\n    button,\n    color,\n    container,\n    font: fonts,\n    input,\n    media,\n    radius,\n    shadow: shadows,\n    space,\n    style: styles,\n  } = v2\n\n  return {\n    _version: 0,\n    avatar,\n    button,\n    container,\n    color: {\n      light: {\n        transparent: themeColor_v2_v0(color.light.transparent),\n        default: themeColor_v2_v0(color.light.default),\n        primary: themeColor_v2_v0(color.light.primary),\n        positive: themeColor_v2_v0(color.light.positive),\n        caution: themeColor_v2_v0(color.light.caution),\n        critical: themeColor_v2_v0(color.light.critical),\n      },\n      dark: {\n        transparent: themeColor_v2_v0(color.dark.transparent),\n        default: themeColor_v2_v0(color.dark.default),\n        primary: themeColor_v2_v0(color.dark.primary),\n        positive: themeColor_v2_v0(color.dark.positive),\n        caution: themeColor_v2_v0(color.dark.caution),\n        critical: themeColor_v2_v0(color.dark.critical),\n      },\n    },\n    focusRing: input.text.focusRing,\n    fonts,\n    input,\n    media,\n    radius,\n    shadows,\n    space,\n    styles,\n\n    v2,\n  }\n}\n\nfunction themeColor_v2_v0(color_v2: ThemeColorCard_v2): ThemeColor {\n  return {\n    base: {\n      bg: color_v2.bg,\n      fg: color_v2.fg,\n      border: color_v2.border,\n      focusRing: color_v2.focusRing,\n      shadow: color_v2.shadow,\n    },\n    button: color_v2.button,\n    card: color_v2.selectable.default,\n    dark: color_v2._dark,\n    input: {\n      default: inputStatesThemeColor_v2_v0(color_v2.input.default),\n      invalid: inputStatesThemeColor_v2_v0(color_v2.input.invalid),\n    },\n    muted: {\n      ...color_v2.button.ghost,\n      transparent: color_v2.button.ghost.default,\n    },\n    solid: {\n      ...color_v2.button.default,\n      transparent: color_v2.button.default.default,\n    },\n    selectable: color_v2.selectable,\n    spot: {\n      gray: color_v2.avatar.gray.bg,\n      blue: color_v2.avatar.blue.bg,\n      purple: color_v2.avatar.purple.bg,\n      magenta: color_v2.avatar.magenta.bg,\n      red: color_v2.avatar.red.bg,\n      orange: color_v2.avatar.orange.bg,\n      yellow: color_v2.avatar.yellow.bg,\n      green: color_v2.avatar.green.bg,\n      cyan: color_v2.avatar.cyan.bg,\n    },\n    syntax: color_v2.syntax,\n  }\n}\n\nfunction inputStatesThemeColor_v2_v0(t: ThemeColorInputMode_v2): ThemeColorInputStates {\n  return {\n    enabled: inputStateThemeColor_v2_v0(t.enabled),\n    disabled: inputStateThemeColor_v2_v0(t.disabled),\n    readOnly: inputStateThemeColor_v2_v0(t.readOnly),\n    hovered: inputStateThemeColor_v2_v0(t.hovered),\n  }\n}\n\nfunction inputStateThemeColor_v2_v0(t: ThemeColorInputState_v2): ThemeColorInputState {\n  return {\n    bg: t.bg,\n    bg2: t.muted.bg,\n    border: t.border,\n    fg: t.fg,\n    placeholder: t.placeholder,\n  }\n}\n","import {COLOR_HUES} from '@sanity/color'\n\n/** @public */\nexport const THEME_COLOR_SCHEMES = ['light', 'dark'] as const\n\n/** @public */\nexport const THEME_COLOR_BLEND_MODES = ['multiply', 'screen'] as const\n\n/** @public */\nexport const THEME_COLOR_CARD_TONES = [\n  'transparent',\n  'default',\n  'neutral',\n  'primary', // deprecated\n  'suggest',\n  'positive',\n  'caution',\n  'critical',\n] as const\n\n/** @public */\nexport const THEME_COLOR_STATE_TONES = [\n  'default',\n  'neutral',\n  'primary', // deprecated\n  'suggest',\n  'positive',\n  'caution',\n  'critical',\n] as const\n\n/** @public */\nexport const THEME_COLOR_STATES = ['enabled', 'hovered', 'pressed', 'selected', 'disabled'] as const\n\n/** @public */\nexport const THEME_COLOR_BUTTON_MODES = ['default', 'ghost', 'bleed'] as const\n\n/** @public */\nexport const THEME_COLOR_INPUT_MODES = ['default', 'invalid'] as const\n\n/** @public */\nexport const THEME_COLOR_INPUT_STATES = ['enabled', 'hovered', 'readOnly', 'disabled'] as const\n\n/** @public */\nexport const THEME_COLOR_AVATAR_COLORS = COLOR_HUES\n","import {COLOR_HUES, COLOR_TINTS, ColorHueKey, ColorTintKey} from '@sanity/color'\nimport {THEME_COLOR_BLEND_MODES, THEME_COLOR_BUTTON_MODES} from './_constants'\nimport {ThemeColorBlendModeKey, ThemeColorButtonModeKey} from './_system'\n\n/** @internal */\nexport function isColorBlendModeValue(str: string): str is ThemeColorBlendModeKey {\n  return THEME_COLOR_BLEND_MODES.includes(str as ThemeColorBlendModeKey)\n}\n\n/** @internal */\nexport function isColorHueKey(str: string): str is ColorHueKey {\n  return COLOR_HUES.includes(str as ColorHueKey)\n}\n\n/** @internal */\nexport function isColorTintKey(str: string): str is ColorTintKey {\n  return COLOR_TINTS.includes(str as ColorTintKey)\n}\n\n/** @internal */\nexport function isColorButtonMode(str: string): str is ThemeColorButtonModeKey {\n  return THEME_COLOR_BUTTON_MODES.includes(str as ThemeColorButtonModeKey)\n}\n","import {ColorHueKey, ColorTintKey} from '@sanity/color'\nimport {\n  THEME_COLOR_AVATAR_COLORS,\n  THEME_COLOR_CARD_TONES,\n  THEME_COLOR_INPUT_MODES,\n  THEME_COLOR_INPUT_STATES,\n  THEME_COLOR_STATES,\n  THEME_COLOR_STATE_TONES,\n  ThemeColorBlendModeKey,\n} from '../system'\n\n/** @public */\nexport const COLOR_CONFIG_STATE_KEYS = [\n  '_hue',\n  'bg',\n  'fg',\n  'border',\n  'focusRing',\n  'muted/fg',\n  'accent/fg',\n  'link/fg',\n  'code/bg',\n  'code/fg',\n  'skeleton/from',\n  'skeleton/to',\n  'status/dot',\n  'status/icon',\n] as const\n\n/** @public */\nexport type ColorConfigStateKey = (typeof COLOR_CONFIG_STATE_KEYS)[number]\n\n/** @public */\nexport const COLOR_CONFIG_CARD_KEYS = [\n  ...COLOR_CONFIG_STATE_KEYS,\n  '_hue',\n  'bg',\n  'fg',\n  'border',\n  'focusRing',\n  'shadow/outline',\n  'shadow/umbra',\n  'shadow/penumbra',\n  'shadow/ambient',\n] as const\n\n/** @public */\nexport type ColorConfigCardKey = (typeof COLOR_CONFIG_CARD_KEYS)[number]\n\n/** @public */\nexport const COLOR_CONFIG_BLEND_KEYS = ['_blend'] as const\n\n/** @public */\nexport type ColorConfigBlendKey = (typeof COLOR_CONFIG_BLEND_KEYS)[number]\n\n/** @public */\nexport type ColorConfigOpacityValue = `0` | `0.${number}` | `1`\n\n/** @public */\nexport type ColorConfigValue =\n  | `black`\n  | `white`\n  | `black/${ColorConfigOpacityValue}`\n  | `white/${ColorConfigOpacityValue}`\n  | `${ColorHueKey}`\n  | `${ColorHueKey} ${number}%`\n  | `${ColorHueKey}/${ColorTintKey}`\n  | `${ColorHueKey}/${ColorTintKey} ${number}%`\n  | `${ColorHueKey}/${ColorTintKey}/${ColorConfigOpacityValue}`\n  | `${ColorTintKey}`\n  | `${ColorTintKey} ${number}%`\n  | `${ColorTintKey}/${ColorConfigOpacityValue}`\n\n/** @public */\nexport type ThemeColorTokenValue = [ColorConfigValue, ColorConfigValue]\n\n/** @public */\nexport type ColorBlendModeTokenValue = [ThemeColorBlendModeKey, ThemeColorBlendModeKey]\n\n/** @public */\nexport const COLOR_CONFIG_AVATAR_COLORS = ['*', ...THEME_COLOR_AVATAR_COLORS] as const\n\n/** @public */\nexport type ColorConfigAvatarColor = (typeof COLOR_CONFIG_AVATAR_COLORS)[number]\n\n/** @public */\nexport const COLOR_CONFIG_CARD_TONES = ['*', ...THEME_COLOR_CARD_TONES] as const\n\n/** @public */\nexport type ColorConfigCardTone = (typeof COLOR_CONFIG_CARD_TONES)[number]\n\n/** @public */\nexport const COLOR_CONFIG_STATE_TONES = ['*', ...THEME_COLOR_STATE_TONES] as const\n\n/** @public */\nexport type ColorConfigStateTone = (typeof COLOR_CONFIG_STATE_TONES)[number]\n\n/** @public */\nexport const COLOR_CONFIG_STATES = ['*', ...THEME_COLOR_STATES] as const\n\n/** @public */\nexport type ColorConfigState = (typeof COLOR_CONFIG_STATES)[number]\n\n/** @public */\nexport const COLOR_CONFIG_INPUT_MODES = ['*', ...THEME_COLOR_INPUT_MODES] as const\n\n/** @public */\nexport type ColorConfigInputMode = (typeof COLOR_CONFIG_INPUT_MODES)[number]\n\n/** @public */\nexport const COLOR_CONFIG_INPUT_STATES = ['*', ...THEME_COLOR_INPUT_STATES] as const\n\n/** @public */\nexport type ColorConfigInputState = (typeof COLOR_CONFIG_INPUT_STATES)[number]\n","import {isColorButtonMode} from '../../system'\nimport {\n  isColorConfigBaseKey,\n  isColorConfigBaseTone,\n  isColorConfigBlendKey,\n  isColorConfigStateKey,\n  isColorConfigStateTone,\n} from '../helpers'\nimport {TokenKeyNode} from './types'\n\n/** @internal */\nexport function parseTokenKey(str: string): TokenKeyNode | undefined {\n  const segments = str.split('/')\n  const segment0 = segments.shift() || ''\n\n  if (isColorConfigBaseTone(segment0)) {\n    const key = segments.join('/')\n\n    if (isColorConfigBaseKey(key)) {\n      return {\n        type: 'base',\n        tone: segment0,\n        key,\n      }\n    }\n\n    if (isColorConfigBlendKey(key)) {\n      return {\n        type: 'base',\n        tone: segment0,\n        key,\n      }\n    }\n  }\n\n  if (segment0 === 'button') {\n    const segment1 = segments.shift() || ''\n\n    if (isColorConfigStateTone(segment1)) {\n      const segment2 = segments.shift() || ''\n\n      if (isColorButtonMode(segment2)) {\n        const key = segments.join('/')\n\n        if (isColorConfigStateKey(key)) {\n          return {\n            type: 'button',\n            tone: segment1,\n            mode: segment2,\n            key,\n          }\n        }\n\n        if (isColorConfigBlendKey(key)) {\n          return {\n            type: 'button',\n            tone: segment1,\n            mode: segment2,\n            key,\n          }\n        }\n      }\n    }\n  }\n\n  return undefined\n}\n","import {isColorBlendModeValue, isColorHueKey, isColorTintKey} from '../../system'\nimport {isColorOpacityValue, isColorValue} from '../helpers'\nimport {TokenValueNode} from './types'\n\nfunction isColorMixPercentValue(str: string): str is `${number}%` {\n  return /^\\d+%$/.test(str)\n}\n\n/** @internal */\nexport function parseTokenValue(str: string): TokenValueNode | undefined {\n  const segments = str.split('/')\n\n  let nextSegment = segments.shift() || ''\n\n  const [segment0, segment0mix] = nextSegment.split(' ')\n\n  if (isColorTintKey(segment0)) {\n    const tint = segment0\n    const segment1 = segments.shift() || ''\n\n    if (isColorMixPercentValue(segment0mix)) {\n      const mix = Number(segment0mix.slice(0, -1)) / 100\n\n      return {\n        type: 'color',\n        tint,\n        mix,\n      }\n    }\n\n    if (isColorOpacityValue(segment1)) {\n      const opacity = Number(segment1)\n\n      return {\n        type: 'color',\n        tint,\n        opacity,\n      }\n    }\n\n    return {\n      type: 'color',\n      tint,\n    }\n  }\n\n  if (isColorValue(segment0)) {\n    const key = segment0 as 'black' | 'white'\n    const segment1 = segments.shift() || ''\n\n    if (isColorMixPercentValue(segment0mix)) {\n      const mix = Number(segment0mix.slice(0, -1)) / 100\n\n      return {\n        type: 'color',\n        key,\n        mix,\n      }\n    }\n\n    if (isColorOpacityValue(segment1)) {\n      const opacity = Number(segment1)\n\n      return {\n        type: 'color',\n        key,\n        opacity,\n      }\n    }\n\n    return {\n      type: 'color',\n      key,\n    }\n  }\n\n  if (isColorHueKey(segment0)) {\n    const hue = segment0\n\n    nextSegment = segments.shift() || ''\n\n    const [segment1, segment1mix] = nextSegment.split(' ')\n\n    if (isColorTintKey(segment1)) {\n      const tint = segment1\n      const segment2 = segments.shift() || ''\n\n      if (isColorMixPercentValue(segment1mix)) {\n        const mix = Number(segment1mix.slice(0, -1)) / 100\n\n        return {\n          type: 'color',\n          hue,\n          tint,\n          mix,\n        }\n      }\n\n      if (isColorOpacityValue(segment2)) {\n        const opacity = Number(segment2)\n\n        return {\n          type: 'color',\n          hue,\n          tint,\n          opacity,\n        }\n      }\n\n      return {\n        type: 'color',\n        hue,\n        tint,\n      }\n    }\n\n    return {\n      type: 'hue',\n      value: hue,\n    }\n  }\n\n  if (isColorBlendModeValue(segment0)) {\n    const value = segment0\n\n    return {\n      type: 'blendMode',\n      value,\n    }\n  }\n\n  return undefined\n}\n","import {\n  COLOR_CONFIG_CARD_KEYS,\n  COLOR_CONFIG_CARD_TONES,\n  COLOR_CONFIG_BLEND_KEYS,\n  COLOR_CONFIG_STATE_KEYS,\n  COLOR_CONFIG_STATE_TONES,\n  ColorConfigCardKey,\n  ColorConfigCardTone,\n  ColorConfigBlendKey,\n  ColorConfigOpacityValue,\n  ColorConfigStateKey,\n  ColorConfigStateTone,\n  ColorConfigValue,\n} from './system'\nimport {parseTokenValue} from './tokens'\n\n/** @internal */\nexport function isColorConfigBaseTone(str: string): str is ColorConfigCardTone {\n  return COLOR_CONFIG_CARD_TONES.includes(str as ColorConfigCardTone)\n}\n\n/** @internal */\nexport function isColorConfigBaseKey(str: string): str is ColorConfigCardKey {\n  return COLOR_CONFIG_CARD_KEYS.includes(str as ColorConfigCardKey)\n}\n\n/** @internal */\nexport function isColorConfigStateKey(str: string): str is ColorConfigStateKey {\n  return COLOR_CONFIG_STATE_KEYS.includes(str as ColorConfigStateKey)\n}\n\n/** @internal */\nexport function isColorConfigStateTone(str: string): str is ColorConfigStateTone {\n  return COLOR_CONFIG_STATE_TONES.includes(str as ColorConfigStateTone)\n}\n\n/** @internal */\nexport function isColorConfigBlendKey(str: string): str is ColorConfigBlendKey {\n  return COLOR_CONFIG_BLEND_KEYS.includes(str as ColorConfigBlendKey)\n}\n\n/** @internal */\nexport function isColorTokenValue(str: string): str is ColorConfigValue {\n  return parseTokenValue(str)?.type === 'color' || parseTokenValue(str)?.type === 'hue'\n}\n\n/** @internal */\nexport function isColorValue(str: string): str is 'black' | 'white' {\n  return str === 'black' || str === 'white'\n}\n\n/** @internal */\nexport function isColorOpacityValue(str: string): str is ColorConfigOpacityValue {\n  return str === '0' || /^0\\.[0-9]+$/.test(str) || str === '1'\n}\n","import {TokenColorValueNode} from '../../config'\n\nexport function compileColorTokenValue(node: TokenColorValueNode): string {\n  let key = ''\n\n  if (node.key === 'black' || node.key === 'white') {\n    key = node.key\n  } else {\n    key = `${node.hue}/${node.tint}`\n  }\n\n  if (node.mix !== undefined) {\n    return `${key} ${node.mix * 100}%`\n  }\n\n  if (node.opacity !== undefined) {\n    key += `/${node.opacity}`\n  }\n\n  return key\n}\n","import {ThemeColorTokenValue, parseTokenValue} from '../../config'\nimport {compileColorTokenValue} from './compileColorToken'\nimport {ColorTokenContext} from './types'\n\nconst DEFAULT_COLOR_TOKEN_VALUE: ThemeColorTokenValue = ['500', '500']\n\nexport function resolveColorTokenValue(\n  context: ColorTokenContext,\n  value: ThemeColorTokenValue = DEFAULT_COLOR_TOKEN_VALUE,\n): string {\n  const {hue, scheme} = context\n  const node = parseTokenValue(value[scheme === 'light' ? 0 : 1])\n\n  if (!node || node.type !== 'color') {\n    throw new Error(`Invalid color token: ${value[0]}`)\n  }\n\n  return compileColorTokenValue({...node, hue: node.hue || hue})\n}\n","import {ThemeColorTokens} from '../config'\n\nexport const defaultColorTokens: ThemeColorTokens = {\n  base: {\n    '*': {\n      _blend: ['multiply', 'screen'],\n      accent: {\n        fg: ['purple/600', 'purple/400'],\n      },\n      avatar: {\n        '*': {\n          _blend: ['screen', 'multiply'],\n          bg: ['500', '400'],\n          fg: ['white', 'black'],\n        },\n      },\n      backdrop: ['gray/200/0.5', 'black/0.5'],\n      badge: {\n        '*': {\n          bg: ['100', '900'],\n          fg: ['600', '400'],\n          icon: ['500', '500'],\n          dot: ['500', '500'],\n        },\n        'positive': {\n          bg: ['200 50%', '900'],\n          fg: ['600', '500'],\n        },\n        'caution': {\n          bg: ['200 50%', '900'],\n          fg: ['600', '500'],\n        },\n      },\n      bg: ['50', '950'],\n      border: ['200', '800'],\n      code: {\n        bg: ['50', '950'],\n        fg: ['600', '400'],\n      },\n      fg: ['800', '200'],\n      focusRing: ['blue/500', 'blue/500'],\n      icon: ['600', '400'],\n      kbd: {\n        bg: ['white', 'black'],\n        fg: ['600', '400'],\n        border: ['200', '800'],\n      },\n      link: {\n        fg: ['blue/600', 'blue/300'],\n      },\n      muted: {\n        bg: ['50', '950'],\n        fg: ['700 75%', '300 75%'],\n      },\n      shadow: {\n        outline: ['500/0.3', '500/0.4'],\n        umbra: ['gray/500/0.1', 'black/0.2'],\n        penumbra: ['gray/500/0.07', 'black/0.14'],\n        ambient: ['gray/500/0.06', 'black/0.12'],\n      },\n      skeleton: {\n        from: ['100', '900'],\n        to: ['100 50%', '900 50%'],\n      },\n    },\n    'transparent': {\n      bg: ['50', 'black'],\n    },\n    'default': {\n      bg: ['white', '950'],\n      fg: ['800', '200'],\n      muted: {\n        fg: ['600', '400'],\n      },\n    },\n    'primary': {_hue: 'blue'},\n    'suggest': {_hue: 'purple'},\n    'positive': {\n      _hue: 'green',\n      shadow: {outline: ['500/0.4', '500/0.4']},\n    },\n    'caution': {\n      _hue: 'yellow',\n      shadow: {outline: ['600/0.3', '500/0.4']},\n    },\n    'critical': {_hue: 'red'},\n  },\n  button: {\n    default: {\n      '*': {\n        '*': {\n          _blend: ['screen', 'multiply'],\n          accent: {\n            fg: ['purple/300', 'purple/700'],\n          },\n          avatar: {\n            '*': {\n              _blend: ['screen', 'multiply'],\n              bg: ['500', '400'],\n              fg: ['white', 'black'],\n            },\n          },\n          badge: {\n            '*': {\n              bg: ['900', '100'],\n              fg: ['400', '600'],\n              dot: ['500', '500'],\n              icon: ['500', '500'],\n            },\n          },\n          bg: ['500', '400'],\n          border: ['500/0', '400/0'],\n          code: {\n            bg: ['500 20%', '400 20%'],\n            fg: ['200', '600'],\n          },\n          fg: ['white', 'black'],\n          icon: ['100 70%', '900 70%'],\n          kbd: {\n            bg: ['black', 'white'],\n            fg: ['200', '600'],\n            border: ['800', '200'],\n          },\n          link: {\n            fg: ['blue/200', 'blue/600'],\n          },\n          muted: {\n            bg: ['950', '50'],\n            fg: ['100 70%', '900 70%'],\n          },\n          skeleton: {\n            from: ['900', '100'],\n            to: ['900 50%', '100 50%'],\n          },\n        },\n        'hovered': {\n          bg: ['600', '300'],\n          border: ['700/0', '300/0'],\n        },\n        'pressed': {\n          bg: ['700', '300'],\n        },\n        'selected': {\n          bg: ['700', '300'],\n        },\n        'disabled': {\n          _hue: 'gray',\n          accent: {\n            fg: ['100 70%', '900 70%'],\n          },\n          avatar: {\n            '*': {\n              _blend: ['screen', 'multiply'],\n              bg: ['gray/500', 'gray/400'],\n              fg: ['white', 'black'],\n            },\n          },\n          badge: {\n            '*': {\n              bg: ['gray/700', 'gray/300'],\n              fg: ['white', 'black'],\n              dot: ['white', 'black'],\n              icon: ['white', 'black'],\n            },\n          },\n          bg: ['300', '600'],\n          code: {\n            bg: ['950', '50'],\n            fg: ['300', '600'],\n          },\n          fg: ['300', '600'],\n          muted: {\n            bg: ['950', '50'],\n            fg: ['300', '600'],\n          },\n          kbd: {\n            bg: ['black', 'white'],\n            fg: ['white', 'black'],\n            border: ['700', '300'],\n          },\n          link: {\n            fg: ['100 70%', '900 70%'],\n          },\n        },\n      },\n      'default': {\n        '*': {\n          avatar: {\n            '*': {\n              _blend: ['screen', 'multiply'],\n              bg: ['500', '400'],\n              fg: ['white', 'black'],\n            },\n          },\n          bg: ['800', '200'],\n          muted: {\n            bg: ['950', '50'],\n            fg: ['400', '600'],\n          },\n        },\n        'hovered': {\n          bg: ['900', '100'],\n        },\n        'pressed': {\n          bg: ['black', 'white'],\n        },\n        'selected': {\n          bg: ['black', 'white'],\n        },\n      },\n    },\n    ghost: {\n      '*': {\n        '*': {\n          _blend: ['multiply', 'screen'],\n          accent: {\n            fg: ['purple/700 60%', 'purple/300 70%'],\n          },\n          avatar: {\n            '*': {\n              _blend: ['screen', 'multiply'],\n              bg: ['500', '400'],\n              fg: ['white', 'black'],\n            },\n          },\n          badge: {\n            '*': {\n              bg: ['100', '900'],\n              fg: ['600', '400'],\n              dot: ['500', '500'],\n              icon: ['500', '500'],\n            },\n          },\n          bg: ['50', '950'],\n          border: ['100', '900'],\n          code: {\n            bg: ['500 10%', '400 10%'],\n            fg: ['700 60%', '400 60%'],\n          },\n          fg: ['600', '400'],\n          icon: ['700 60%', '300 60%'],\n          kbd: {\n            bg: ['white', 'black'],\n            fg: ['600', '400'],\n            border: ['200', '800'],\n          },\n          link: {\n            fg: ['blue/700 60%', 'blue/300 60%'],\n          },\n          muted: {\n            bg: ['100', '950'],\n            fg: ['700 60%', '300 60%'],\n          },\n          skeleton: {\n            from: ['100', '900'],\n            to: ['100 50%', '900 50%'],\n          },\n        },\n        'hovered': {\n          bg: ['100', '900'],\n          fg: ['700', '300'],\n        },\n        'pressed': {\n          bg: ['200', '800'],\n          fg: ['800', '200'],\n        },\n        'selected': {\n          bg: ['200', '800'],\n          fg: ['800', '200'],\n        },\n        'disabled': {\n          _hue: 'gray',\n          accent: {\n            fg: ['200', '800'],\n          },\n          avatar: {\n            '*': {\n              _blend: ['screen', 'multiply'],\n              bg: ['gray/100', 'gray/900'],\n              fg: ['white', 'black'],\n            },\n          },\n          badge: {\n            '*': {\n              _hue: 'gray',\n              bg: ['50', '950'],\n              fg: ['gray/200', 'gray/800'],\n              dot: ['gray/200', 'gray/800'],\n              icon: ['gray/200', 'gray/800'],\n            },\n          },\n          border: ['100', '900'],\n          code: {\n            bg: ['50', '950'],\n            fg: ['200', '800'],\n          },\n          fg: ['400', '600'],\n          icon: ['300', '700'],\n          muted: {\n            fg: ['300', '700'],\n          },\n          kbd: {\n            bg: ['white', 'black'],\n            fg: ['200', '800'],\n            border: ['100', '900'],\n          },\n          link: {\n            fg: ['200', '800'],\n          },\n        },\n      },\n      'positive': {\n        '*': {\n          border: ['600 20%', '800'],\n        },\n      },\n      'caution': {\n        '*': {\n          border: ['600 20%', '800'],\n        },\n      },\n    },\n    bleed: {\n      '*': {\n        '*': {\n          _blend: ['multiply', 'screen'],\n          accent: {\n            fg: ['purple/700 70%', 'purple/300 70%'],\n          },\n          avatar: {\n            '*': {\n              _blend: ['screen', 'multiply'],\n              bg: ['500', '400'],\n              fg: ['white', 'black'],\n            },\n          },\n          badge: {\n            '*': {\n              bg: ['100', '900'],\n              fg: ['600', '400'],\n              dot: ['500', '500'],\n              icon: ['500', '500'],\n            },\n          },\n          bg: ['white', 'black'],\n          border: ['white/0', 'black/0'],\n          code: {\n            bg: ['50', '950'],\n            fg: ['700 75%', '300 75%'],\n          },\n          fg: ['700', '300'],\n          icon: ['700 75%', '300 75%'],\n          kbd: {\n            bg: ['white', 'black'],\n            fg: ['700', '300'],\n            border: ['200', '800'],\n          },\n          link: {\n            fg: ['blue/700 70%', 'blue/300 70%'],\n          },\n          muted: {\n            bg: ['100', '950'],\n            fg: ['700 75%', '300 75%'],\n          },\n          skeleton: {\n            from: ['100', '900'],\n            to: ['100 50%', '900 50%'],\n          },\n        },\n        'hovered': {\n          bg: ['50', '950'],\n          fg: ['800', '200'],\n          icon: ['800 70%', '300 70%'],\n        },\n        'pressed': {\n          bg: ['100', '900'],\n          fg: ['800', '200'],\n          icon: ['800 70%', '200 70%'],\n        },\n        'selected': {\n          bg: ['100', '900'],\n          fg: ['800', '200'],\n          icon: ['800 60%', '200 60%'],\n        },\n        'disabled': {\n          _hue: 'gray',\n          accent: {\n            fg: ['200', '800'],\n          },\n          avatar: {\n            '*': {\n              _blend: ['screen', 'multiply'],\n              bg: ['gray/100', 'gray/900'],\n              fg: ['white', 'black'],\n            },\n          },\n          badge: {\n            '*': {\n              _hue: 'gray',\n              bg: ['50', '950'],\n              fg: ['gray/200', 'gray/800'],\n              dot: ['gray/200', 'gray/800'],\n              icon: ['gray/200', 'gray/800'],\n            },\n          },\n          code: {\n            bg: ['50', '950'],\n            fg: ['200', '800'],\n          },\n          fg: ['400', '600'],\n          icon: ['300', '700'],\n          muted: {\n            fg: ['400', '600'],\n          },\n          kbd: {\n            bg: ['white', 'black'],\n            fg: ['200', '800'],\n            border: ['100', '900'],\n          },\n          link: {\n            fg: ['200', '800'],\n          },\n        },\n      },\n    },\n  },\n  input: {\n    '*': {\n      '*': {\n        _blend: ['multiply', 'screen'],\n        bg: ['white', 'black'],\n        border: ['200', '700'],\n        fg: ['black', '200'],\n        muted: {\n          bg: ['50', '950'],\n        },\n        placeholder: ['400', '600'],\n      },\n      'hovered': {\n        border: ['300', '700'],\n      },\n      'readOnly': {\n        bg: ['50', '950'],\n        border: ['200', '800'],\n        fg: ['800', '200'],\n      },\n      'disabled': {\n        bg: ['50', '950'],\n        fg: ['400', '600'],\n        border: ['100', '900'],\n        placeholder: ['200', '800 50%'],\n      },\n    },\n    'invalid': {\n      '*': {\n        _hue: 'red',\n        bg: ['100', '950'],\n      },\n    },\n  },\n  selectable: {\n    '*': {\n      '*': {\n        _blend: ['multiply', 'screen'],\n        accent: {\n          fg: ['purple/700 70%', 'purple/300 70%'],\n        },\n        avatar: {\n          '*': {\n            _blend: ['screen', 'multiply'],\n            bg: ['500', '400'],\n            fg: ['white', 'black'],\n          },\n        },\n        badge: {\n          '*': {\n            bg: ['100', '900'],\n            fg: ['600', '400'],\n            dot: ['500', '500'],\n            icon: ['500', '500'],\n          },\n        },\n        bg: ['white', 'black'],\n        border: ['200', '800'],\n        code: {\n          bg: ['50', '950'],\n          fg: ['600', '400'],\n        },\n        fg: ['700', '300'],\n        icon: ['700 75%', '300 75%'],\n        kbd: {\n          bg: ['white', 'black'],\n          fg: ['600', '400'],\n          border: ['200', '800'],\n        },\n        link: {\n          fg: ['blue/700 70%', 'blue/300 70%'],\n        },\n        muted: {\n          bg: ['50', '950'],\n          fg: ['700 75%', '300 75%'],\n        },\n        skeleton: {\n          from: ['100', '900'],\n          to: ['100 50%', '900 50%'],\n        },\n      },\n      'hovered': {\n        bg: ['50', '950'],\n      },\n      'pressed': {\n        bg: ['100', '900'],\n      },\n      'selected': {\n        _blend: ['screen', 'multiply'],\n        accent: {\n          fg: ['purple/300', 'purple/700'],\n        },\n        avatar: {\n          '*': {\n            _blend: ['multiply', 'screen'],\n            bg: ['white', 'black'],\n            fg: ['black', 'white'],\n          },\n        },\n        badge: {\n          '*': {\n            bg: ['900', '100'],\n            fg: ['400', '600'],\n            dot: ['500', '500'],\n            icon: ['500', '500'],\n          },\n        },\n        bg: ['500', '400'],\n        border: ['500 20%', '400 20%'],\n        code: {\n          bg: ['500 20%', '400 20%'],\n          fg: ['200', '600'],\n        },\n        fg: ['white', 'black'],\n        icon: ['100 70%', '900 70%'],\n        kbd: {\n          bg: ['black', 'white'],\n          fg: ['200', '600'],\n          border: ['800', '200'],\n        },\n        link: {\n          fg: ['blue/200', 'blue/600'],\n        },\n        muted: {\n          bg: ['500 10%', '400 10%'],\n          fg: ['100 70%', '900 70%'],\n        },\n        skeleton: {\n          from: ['900', '100'],\n          to: ['900 50%', '100 50%'],\n        },\n      },\n      'disabled': {\n        _hue: 'gray',\n        accent: {\n          fg: ['200', '800'],\n        },\n        avatar: {\n          '*': {\n            _blend: ['screen', 'multiply'],\n            bg: ['gray/100', 'gray/900'],\n            fg: ['white', 'black'],\n          },\n        },\n        badge: {\n          '*': {\n            _hue: 'gray',\n            bg: ['50', '950'],\n            fg: ['gray/200', 'gray/800'],\n            dot: ['gray/200', 'gray/800'],\n            icon: ['gray/200', 'gray/800'],\n          },\n        },\n        border: ['100', '900'],\n        code: {\n          bg: ['50', '950'],\n          fg: ['200', '800'],\n        },\n        fg: ['200', '800'],\n        icon: ['200', '800'],\n        kbd: {\n          bg: ['white', 'black'],\n          fg: ['200', '800'],\n          border: ['100', '900'],\n        },\n        link: {\n          fg: ['200', '800'],\n        },\n        muted: {\n          bg: ['50 50%', '950 50%'],\n          fg: ['200', '800'],\n        },\n      },\n    },\n    'default': {\n      selected: {\n        _hue: 'blue',\n      },\n    },\n    'critical': {\n      disabled: {\n        bg: ['50 50%', '950 50%'],\n      },\n    },\n  },\n  syntax: {\n    atrule: ['purple/600', 'purple/400'],\n    attrName: ['green/600', 'green/400'],\n    attrValue: ['yellow/600', 'yellow/400'],\n    attribute: ['yellow/600', 'yellow/400'],\n    boolean: ['purple/600', 'purple/400'],\n    builtin: ['purple/600', 'purple/400'],\n    cdata: ['yellow/600', 'yellow/400'],\n    char: ['yellow/600', 'yellow/400'],\n    class: ['orange/600', 'orange/400'],\n    className: ['cyan/600', 'cyan/400'],\n    comment: ['gray/400', 'gray/600'],\n    constant: ['purple/600', 'purple/400'],\n    deleted: ['red/600', 'red/400'],\n    entity: ['red/600', 'red/400'],\n    function: ['green/600', 'green/400'],\n    hexcode: ['blue/600', 'blue/400'],\n    id: ['purple/600', 'purple/400'],\n    important: ['purple/600', 'purple/400'],\n    inserted: ['yellow/600', 'yellow/400'],\n    keyword: ['magenta/600', 'magenta/400'],\n    number: ['purple/600', 'purple/400'],\n    operator: ['magenta/600', 'magenta/400'],\n    property: ['blue/600', 'blue/400'],\n    pseudoClass: ['yellow/600', 'yellow/400'],\n    pseudoElement: ['yellow/600', 'yellow/400'],\n    punctuation: ['gray/600', 'gray/400'],\n    regex: ['blue/600', 'blue/400'],\n    selector: ['red/600', 'red/400'],\n    string: ['yellow/600', 'yellow/400'],\n    symbol: ['purple/600', 'purple/400'],\n    tag: ['red/600', 'red/400'],\n    unit: ['orange/600', 'orange/400'],\n    url: ['red/600', 'red/400'],\n    variable: ['red/600', 'red/400'],\n  },\n}\n","export function isRecord(value: unknown): value is Record<string, unknown> {\n  return Boolean(value && typeof value === 'object' && !Array.isArray(value))\n}\n","import {isRecord} from './lib/isRecord'\n\nexport function merge<T extends Record<string, any>>(...records: (T | undefined)[]): T {\n  const _records = records.filter(Boolean) as T[]\n\n  if (_records.length === 0) {\n    return {} as T\n  }\n\n  return _records.reduce(_merge, {} as T)\n}\n\nfunction _merge<T extends Record<string, any>>(acc: T, source: T): T {\n  for (const key of Object.keys(source)) {\n    const prevValue = acc[key]\n    const nextValue = source[key]\n\n    if (isRecord(prevValue) && isRecord(nextValue)) {\n      ;(acc as any)[key] = merge(prevValue, nextValue)\n    } else {\n      ;(acc as any)[key] = nextValue\n    }\n  }\n\n  return acc\n}\n","import {COLOR_HUES, ColorHueKey} from '@sanity/color'\nimport {\n  ColorConfigCardTone,\n  ColorConfigInputMode,\n  ColorConfigInputState,\n  ColorConfigStateTone,\n  ThemeColorAvatarTokens,\n  ThemeColorBadgeTokens,\n  ThemeColorBaseTokens,\n  ThemeColorButtonTokens,\n  ThemeColorInputStateTokens,\n  ThemeColorInputTokens,\n  ThemeColorStateTokens,\n  ThemeColorStatesTokens,\n  ThemeColorTokens,\n} from '../config'\nimport {defaultColorTokens} from '../defaults/colorTokens'\nimport {\n  THEME_COLOR_CARD_TONES,\n  THEME_COLOR_BUTTON_MODES,\n  THEME_COLOR_INPUT_MODES,\n  THEME_COLOR_INPUT_STATES,\n  THEME_COLOR_STATES,\n  THEME_COLOR_STATE_TONES,\n  ThemeColorCardToneKey,\n  ThemeColorButtonModeKey,\n  ThemeColorStateKey,\n  ThemeColorStateToneKey,\n} from '../system'\nimport {merge} from './merge'\n\n/**\n * Convert a tree of color tokens from a sparse format to a dense format.\n */\nexport function resolveColorTokens(inputTokens?: ThemeColorTokens): ThemeColorTokens {\n  const tokens = merge(defaultColorTokens, inputTokens)\n\n  return {\n    base: resolveBaseColorTokens(tokens),\n    button: resolveButtonColorTokens(tokens),\n    input: resolveInputColorTokens(tokens),\n    selectable: resolveSelectableColorTokens(tokens),\n    syntax: tokens.syntax,\n  }\n}\n\nfunction resolveBaseColorTokens(sparseTokens: ThemeColorTokens) {\n  const tokens: Partial<Record<ColorConfigCardTone, ThemeColorBaseTokens>> = {}\n\n  // base tones\n  for (const tone of THEME_COLOR_CARD_TONES) {\n    tokens[tone] = resolveBaseColorTones(sparseTokens, tone)\n  }\n\n  return tokens\n}\n\nfunction resolveBaseColorTones(\n  inputTokens: ThemeColorTokens,\n  tone: ThemeColorCardToneKey,\n): ThemeColorBaseTokens {\n  const spec = merge(inputTokens?.base?.['*'], inputTokens?.base?.[tone])\n\n  const hue = spec._hue || inputTokens?.base?.[tone]?._hue || 'gray'\n\n  return {\n    ...spec,\n    _hue: hue,\n    avatar: COLOR_HUES.reduce((acc, hue) => {\n      return {\n        ...acc,\n        [hue]: merge({_hue: hue}, spec.avatar?.['*'], spec.avatar?.[hue]),\n      }\n    }, {} as ThemeColorAvatarTokens),\n    badge: THEME_COLOR_STATE_TONES.reduce((acc, tone) => {\n      return {\n        ...acc,\n        [tone]: {\n          _hue: inputTokens?.base?.[tone]?._hue || hue,\n          ...spec.badge?.['*'],\n          ...spec.badge?.[tone],\n        },\n      }\n    }, {} as ThemeColorBadgeTokens),\n  }\n}\n\nfunction resolveButtonColorTokens(\n  inputTokens: ThemeColorTokens,\n): Partial<Record<ThemeColorButtonModeKey, ThemeColorButtonTokens>> {\n  const tokens: Partial<Record<ThemeColorButtonModeKey, ThemeColorButtonTokens>> = {}\n\n  for (const mode of THEME_COLOR_BUTTON_MODES) {\n    tokens[mode] = resolveButtonToneColorTokens(inputTokens, mode)\n  }\n\n  return tokens\n}\n\nfunction resolveButtonToneColorTokens(\n  inputTokens: ThemeColorTokens,\n  mode: ThemeColorButtonModeKey,\n): ThemeColorButtonTokens {\n  const tokens: ThemeColorButtonTokens = {}\n\n  for (const tone of THEME_COLOR_STATE_TONES) {\n    tokens[tone] = resolveButtonModeColorTokens(inputTokens, mode, tone)\n  }\n\n  return tokens\n}\n\nfunction resolveButtonModeColorTokens(\n  inputTokens: ThemeColorTokens,\n  mode: ThemeColorButtonModeKey,\n  tone: ThemeColorStateToneKey,\n): ThemeColorStatesTokens {\n  const tokens: ThemeColorStatesTokens = {}\n\n  for (const state of THEME_COLOR_STATES) {\n    tokens[state] = resolveButtonStateColorTokens(inputTokens, tone, mode, state)\n  }\n\n  return tokens\n}\n\nfunction resolveButtonStateColorTokens(\n  inputTokens: ThemeColorTokens,\n  tone: ThemeColorStateToneKey,\n  mode: ThemeColorButtonModeKey,\n  state: ThemeColorStateKey,\n): ThemeColorStateTokens {\n  const spec = merge(\n    inputTokens?.button?.[mode]?.['*']?.['*'],\n    inputTokens?.button?.[mode]?.[tone]?.['*'],\n    inputTokens?.button?.[mode]?.['*']?.[state],\n    inputTokens?.button?.[mode]?.[tone]?.[state],\n  )\n\n  const hue = spec._hue || inputTokens?.base?.[tone]?._hue\n\n  return {\n    ...spec,\n    _hue: hue,\n    avatar: COLOR_HUES.reduce((acc, hue) => {\n      return {\n        ...acc,\n        [hue]: merge({_hue: hue}, spec.avatar?.['*'], spec.avatar?.[hue]),\n      }\n    }, {} as ThemeColorAvatarTokens),\n    badge: THEME_COLOR_STATE_TONES.reduce((acc, tone) => {\n      return {\n        ...acc,\n        [tone]: {\n          _hue: inputTokens?.base?.[tone]?._hue || hue,\n          ...spec.badge?.['*'],\n          ...spec.badge?.[tone],\n        },\n      }\n    }, {} as ThemeColorBadgeTokens),\n  }\n}\n\nfunction resolveInputColorTokens(\n  inputTokens: ThemeColorTokens,\n): Partial<Record<ColorConfigInputMode, ThemeColorInputTokens>> {\n  const tokens: Partial<Record<ColorConfigInputMode, ThemeColorInputTokens>> = {}\n\n  for (const mode of THEME_COLOR_INPUT_MODES) {\n    tokens[mode] = resolveInputModeColorTokens(inputTokens, mode)\n  }\n\n  return tokens\n}\n\nfunction resolveInputModeColorTokens(\n  inputTokens: ThemeColorTokens,\n  mode: ColorConfigInputMode,\n): ThemeColorInputTokens {\n  const states: ThemeColorInputTokens = {}\n\n  for (const state of THEME_COLOR_INPUT_STATES) {\n    states[state] = resolveInputStateColorTokens(inputTokens, mode, state)\n  }\n\n  return states\n}\n\nfunction resolveInputStateColorTokens(\n  inputTokens: ThemeColorTokens,\n  mode: ColorConfigInputMode,\n  state: ColorConfigInputState,\n): ThemeColorInputStateTokens {\n  const spec = merge(\n    inputTokens?.input?.['*']?.['*'],\n    inputTokens?.input?.[mode]?.['*'],\n    inputTokens?.input?.['*']?.[state],\n    inputTokens?.input?.[mode]?.[state],\n  )\n\n  const hue = spec._hue || inputTokens?.input?.[mode]?._hue\n\n  return {...spec, _hue: hue}\n}\n\nfunction resolveSelectableColorTokens(\n  inputTokens: ThemeColorTokens,\n): Partial<Record<ColorConfigStateTone, {_hue?: ColorHueKey} & ThemeColorStatesTokens>> {\n  const tokens: ThemeColorButtonTokens = {}\n\n  for (const tone of THEME_COLOR_STATE_TONES) {\n    tokens[tone] = resolveSelectableToneColorTokens(inputTokens, tone)\n  }\n\n  return tokens\n}\n\nfunction resolveSelectableToneColorTokens(\n  inputTokens: ThemeColorTokens,\n  tone: ThemeColorStateToneKey,\n): {_hue?: ColorHueKey} & ThemeColorStatesTokens {\n  const states: {_hue?: ColorHueKey} & ThemeColorStatesTokens = {\n    _hue: inputTokens?.selectable?.[tone]?._hue || inputTokens?.base?.[tone]?._hue,\n  }\n\n  for (const state of THEME_COLOR_STATES) {\n    states[state] = resolveSelectableStateColorTokens(inputTokens, tone, state)\n  }\n\n  return states\n}\n\nfunction resolveSelectableStateColorTokens(\n  inputTokens: ThemeColorTokens,\n  tone: ThemeColorStateToneKey,\n  state: ThemeColorStateKey,\n) {\n  const spec = merge(\n    inputTokens?.selectable?.['*']?.['*'],\n    inputTokens?.selectable?.[tone]?.['*'],\n    inputTokens?.selectable?.['*']?.[state],\n    inputTokens?.selectable?.[tone]?.[state],\n  )\n\n  const hue = spec._hue || inputTokens?.base?.[tone]?._hue\n\n  return {\n    ...spec,\n    _hue: hue,\n    avatar: COLOR_HUES.reduce((acc, hue) => {\n      return {\n        ...acc,\n        [hue]: merge({_hue: hue}, spec.avatar?.['*'], spec.avatar?.[hue]),\n      }\n    }, {} as ThemeColorAvatarTokens),\n    badge: THEME_COLOR_STATE_TONES.reduce((acc, tone) => {\n      return {\n        ...acc,\n        [tone]: {\n          _hue: inputTokens?.base?.[tone]?._hue || hue,\n          ...spec.badge?.['*'],\n          ...spec.badge?.[tone],\n        },\n      }\n    }, {} as ThemeColorBadgeTokens),\n  }\n}\n","import {ThemeColorBadgeTokens, ThemeColorStateTokens, ThemeConfig} from '../config'\nimport {\n  THEME_COLOR_BUTTON_MODES,\n  THEME_COLOR_STATES,\n  THEME_COLOR_STATE_TONES,\n  ThemeColorAvatarColorKey,\n  ThemeColorCardToneKey,\n  ThemeColorButtonModeKey,\n  ThemeColorStateKey,\n  ThemeColorStateToneKey,\n  ThemeColorAvatar_v2,\n  ThemeColorBadge_v2,\n  ThemeColorSyntax,\n  ThemeColorSchemes_v2,\n  ThemeColorScheme_v2,\n  ThemeColorCard_v2,\n  ThemeColorSchemeKey,\n  ThemeColorShadow,\n  ThemeColorState_v2,\n  ThemeColorButton_v2,\n  ThemeColorButtonMode_v2,\n  ThemeColorButtonTone_v2,\n  ThemeColorAvatarHue_v2,\n  ThemeColorInput_v2,\n  ThemeColorInputMode_v2,\n  ThemeColorInputState_v2,\n  THEME_COLOR_CARD_TONES,\n} from '../system'\nimport {ColorTokenContext, resolveColorTokenValue as _color} from './colorToken'\nimport {resolveColorTokens} from './resolveColorTokens'\n\nexport function buildColorTheme(config?: ThemeConfig): ThemeColorSchemes_v2 {\n  const resolvedConfig: ThemeConfig = {\n    ...config,\n    color: resolveColorTokens(config?.color),\n  }\n\n  return {\n    light: buildColorScheme({scheme: 'light'}, resolvedConfig),\n    dark: buildColorScheme({scheme: 'dark'}, resolvedConfig),\n  }\n}\n\nfunction buildColorScheme(\n  options: {scheme: ThemeColorSchemeKey},\n  config: ThemeConfig,\n): ThemeColorScheme_v2 {\n  const {scheme} = options\n\n  const colorScheme = {} as ThemeColorScheme_v2\n\n  for (const tone of THEME_COLOR_CARD_TONES) {\n    colorScheme[tone] = buildCardColorTheme({scheme, tone}, config)\n  }\n\n  return colorScheme\n}\n\nfunction buildCardColorTheme(\n  options: {scheme: ThemeColorSchemeKey; tone: ThemeColorCardToneKey},\n  config?: ThemeConfig,\n): ThemeColorCard_v2 {\n  const {scheme, tone} = options\n  const tokens = config?.color?.base?.[tone]\n  const hue = tokens?._hue || 'gray'\n  const context: ColorTokenContext = {hue, scheme}\n  const blendMode = tokens?._blend || ['multiply', 'screen']\n\n  return {\n    _blend: blendMode[scheme === 'light' ? 0 : 1],\n    _dark: scheme === 'dark',\n    accent: {\n      fg: _color(context, tokens?.accent?.fg),\n    },\n    avatar: buildAvatarColorTheme({scheme}, tokens),\n    backdrop: _color(context, tokens?.backdrop),\n    badge: buildBadgeColorTheme(tokens?.badge, {scheme}, config),\n    bg: _color(context, tokens?.bg),\n    border: _color(context, tokens?.border),\n    button: buildButtonColorTheme({scheme, tone}, config),\n    code: {\n      bg: _color(context, tokens?.code?.bg),\n      fg: _color(context, tokens?.code?.fg),\n    },\n    fg: _color(context, tokens?.fg),\n    focusRing: _color(context, tokens?.focusRing),\n    icon: _color(context, tokens?.icon),\n    input: buildInputColorTheme({scheme, tone}, config),\n    kbd: {\n      bg: _color(context, tokens?.kbd?.bg),\n      fg: _color(context, tokens?.kbd?.fg),\n      border: _color(context, tokens?.kbd?.border),\n    },\n    link: {\n      fg: _color(context, tokens?.link?.fg),\n    },\n    muted: {\n      bg: _color(context, tokens?.muted?.bg),\n      fg: _color(context, tokens?.muted?.fg),\n    },\n    selectable: buildSelectableColorTheme({scheme, tone}, config),\n    shadow: buildShadowColorTheme({scheme, tone}, config),\n    skeleton: {\n      from: _color(context, tokens?.skeleton?.from),\n      to: _color(context, tokens?.skeleton?.to),\n    },\n    syntax: buildSyntaxColorTheme({scheme}, config),\n  }\n}\n\nfunction buildShadowColorTheme(\n  options: {scheme: ThemeColorSchemeKey; tone: ThemeColorCardToneKey},\n  config?: ThemeConfig,\n): ThemeColorShadow {\n  const {scheme, tone} = options\n  const tokens = config?.color?.base?.[tone]\n  const hue = tokens?._hue || 'gray'\n  const context: ColorTokenContext = {hue, scheme}\n\n  return {\n    outline: _color(context, tokens?.shadow?.outline),\n    umbra: _color(context, tokens?.shadow?.umbra),\n    penumbra: _color(context, tokens?.shadow?.penumbra),\n    ambient: _color(context, tokens?.shadow?.ambient),\n  }\n}\n\nfunction buildAvatarColorTheme(\n  options: {scheme: ThemeColorSchemeKey},\n  stateTokens?: ThemeColorStateTokens,\n): ThemeColorAvatar_v2 {\n  const {scheme} = options\n\n  return {\n    gray: _buildAvatarColorTheme({color: 'gray', scheme}, stateTokens),\n    blue: _buildAvatarColorTheme({color: 'blue', scheme}, stateTokens),\n    purple: _buildAvatarColorTheme({color: 'purple', scheme}, stateTokens),\n    magenta: _buildAvatarColorTheme({color: 'magenta', scheme}, stateTokens),\n    red: _buildAvatarColorTheme({color: 'red', scheme}, stateTokens),\n    orange: _buildAvatarColorTheme({color: 'orange', scheme}, stateTokens),\n    yellow: _buildAvatarColorTheme({color: 'yellow', scheme}, stateTokens),\n    green: _buildAvatarColorTheme({color: 'green', scheme}, stateTokens),\n    cyan: _buildAvatarColorTheme({color: 'cyan', scheme}, stateTokens),\n  }\n}\n\nfunction _buildAvatarColorTheme(\n  options: {color: ThemeColorAvatarColorKey; scheme: ThemeColorSchemeKey},\n  stateTokens?: ThemeColorStateTokens,\n): ThemeColorAvatarHue_v2 {\n  const {color, scheme} = options\n  const tokens = stateTokens?.avatar?.[color]\n  const context: ColorTokenContext = {hue: tokens?._hue || 'gray', scheme}\n  const blendMode = tokens?._blend || ['screen', 'multiply']\n\n  return {\n    _blend: blendMode[scheme === 'light' ? 0 : 1],\n    bg: _color(context, tokens?.bg),\n    fg: _color(context, tokens?.fg),\n  }\n}\n\nfunction buildBadgeColorTheme(\n  tokens: ThemeColorBadgeTokens | undefined,\n  options: {scheme: ThemeColorSchemeKey},\n  config?: ThemeConfig,\n): ThemeColorBadge_v2 {\n  const {scheme} = options\n\n  const colorBadge = {} as ThemeColorBadge_v2\n\n  for (const tone of THEME_COLOR_STATE_TONES) {\n    colorBadge[tone] = _buildBadgeColorTheme(tokens, {scheme, tone}, config)\n  }\n\n  return colorBadge\n}\n\nfunction _buildBadgeColorTheme(\n  parentTokens: ThemeColorBadgeTokens | undefined,\n  options: {scheme: ThemeColorSchemeKey; tone: ThemeColorStateToneKey},\n  config?: ThemeConfig,\n): ThemeColorBadge_v2['default'] {\n  const {scheme, tone} = options\n  const tokens = parentTokens?.[tone]\n  const hue = tokens?._hue || config?.color?.base?.[tone]?._hue || 'gray'\n  const context: ColorTokenContext = {hue, scheme}\n\n  return {\n    bg: _color(context, tokens?.bg),\n    fg: _color(context, tokens?.fg),\n    dot: _color(context, tokens?.dot),\n    icon: _color(context, tokens?.icon),\n  }\n}\n\nfunction buildButtonColorTheme(\n  options: {scheme: ThemeColorSchemeKey; tone: ThemeColorCardToneKey},\n  config?: ThemeConfig,\n): ThemeColorButton_v2 {\n  const {scheme, tone: cardTone} = options\n\n  const modes: Partial<ThemeColorButton_v2> = {}\n\n  for (const mode of THEME_COLOR_BUTTON_MODES) {\n    modes[mode] = buildButtonTonesColorTheme({cardTone, scheme, mode}, config)\n  }\n\n  return modes as ThemeColorButton_v2\n}\n\nfunction buildButtonTonesColorTheme(\n  options: {\n    cardTone: ThemeColorCardToneKey\n    scheme: ThemeColorSchemeKey\n    mode: ThemeColorButtonModeKey\n  },\n  config?: ThemeConfig,\n): ThemeColorButtonMode_v2 {\n  const {cardTone, mode, scheme} = options\n\n  const tones: Partial<ThemeColorButtonMode_v2> = {}\n\n  for (const tone of THEME_COLOR_STATE_TONES) {\n    tones[tone] = buildButtonStatesColorTheme({cardTone, mode, scheme, tone}, config)\n  }\n\n  return tones as ThemeColorButtonMode_v2\n}\n\nfunction buildButtonStatesColorTheme(\n  options: {\n    cardTone: ThemeColorCardToneKey\n    mode: ThemeColorButtonModeKey\n    scheme: ThemeColorSchemeKey\n    tone: ThemeColorStateToneKey\n  },\n  config?: ThemeConfig,\n): ThemeColorButtonTone_v2 {\n  const {cardTone, mode, scheme, tone} = options\n\n  const states: Partial<ThemeColorButtonTone_v2> = {}\n\n  for (const state of THEME_COLOR_STATES) {\n    states[state] = buildButtonStateColorTheme({cardTone, mode, tone, scheme, state}, config)\n  }\n\n  return states as ThemeColorButtonTone_v2\n}\n\nfunction buildButtonStateColorTheme(\n  options: {\n    cardTone: ThemeColorCardToneKey\n    mode: ThemeColorButtonModeKey\n    tone: ThemeColorStateToneKey\n    scheme: ThemeColorSchemeKey\n    state: ThemeColorStateKey\n  },\n  config?: ThemeConfig,\n): ThemeColorState_v2 {\n  const {cardTone, mode, tone, scheme, state} = options\n  const cardTokens = config?.color?.base?.[cardTone]\n  const tokens = config?.color?.button?.[mode]?.[tone]?.[state]\n  const hue = tokens?._hue || cardTokens?._hue || 'gray'\n  const blendMode = tokens?._blend || ['screen', 'multiply']\n  const context: ColorTokenContext = {hue, scheme}\n\n  return {\n    _blend: blendMode[scheme === 'light' ? 0 : 1],\n    accent: {\n      fg: _color(context, tokens?.accent?.fg),\n    },\n    avatar: buildAvatarColorTheme({scheme}, tokens),\n    badge: buildBadgeColorTheme(tokens?.badge, {scheme}, config),\n    bg: _color(context, tokens?.bg),\n    border: _color(context, tokens?.border),\n    code: {\n      bg: _color(context, tokens?.code?.bg),\n      fg: _color(context, tokens?.code?.fg),\n    },\n    fg: _color(context, tokens?.fg),\n    icon: _color(context, tokens?.icon),\n    muted: {\n      bg: _color(context, tokens?.muted?.bg),\n      fg: _color(context, tokens?.muted?.fg),\n    },\n    kbd: {\n      bg: _color(context, tokens?.kbd?.bg),\n      fg: _color(context, tokens?.kbd?.fg),\n      border: _color(context, tokens?.kbd?.border),\n    },\n    link: {\n      fg: _color(context, tokens?.link?.fg),\n    },\n    skeleton: {\n      from: _color(context, tokens?.skeleton?.from),\n      to: _color(context, tokens?.skeleton?.to),\n    },\n  }\n}\n\nfunction buildInputColorTheme(\n  options: {scheme: ThemeColorSchemeKey; tone: ThemeColorCardToneKey},\n  config?: ThemeConfig,\n): ThemeColorInput_v2 {\n  const {scheme, tone} = options\n\n  return {\n    default: buildInputStatesColorTheme({mode: 'default', scheme, tone}, config),\n    invalid: buildInputStatesColorTheme({mode: 'invalid', scheme, tone}, config),\n  }\n}\n\nfunction buildInputStatesColorTheme(\n  options: {\n    mode: 'default' | 'invalid'\n    scheme: ThemeColorSchemeKey\n    tone: ThemeColorCardToneKey\n  },\n  config?: ThemeConfig,\n): ThemeColorInputMode_v2 {\n  const {mode, scheme, tone} = options\n\n  return {\n    enabled: buildInputStateColorTheme({mode, scheme, state: 'enabled', cardTone: tone}, config),\n    hovered: buildInputStateColorTheme({mode, scheme, state: 'hovered', cardTone: tone}, config),\n    readOnly: buildInputStateColorTheme({mode, scheme, state: 'readOnly', cardTone: tone}, config),\n    disabled: buildInputStateColorTheme({mode, scheme, state: 'disabled', cardTone: tone}, config),\n  }\n}\n\nfunction buildInputStateColorTheme(\n  options: {\n    cardTone: ThemeColorCardToneKey\n    mode: 'default' | 'invalid'\n    scheme: ThemeColorSchemeKey\n    state: 'enabled' | 'hovered' | 'readOnly' | 'disabled'\n  },\n  config?: ThemeConfig,\n): ThemeColorInputState_v2 {\n  const {cardTone, mode, scheme, state} = options\n  const cardTokens = config?.color?.base?.[cardTone]\n  const tokens = config?.color?.input?.[mode]?.[state]\n  const hue = tokens?._hue || cardTokens?._hue || 'gray'\n  const blendMode = tokens?._blend || ['screen', 'multiply']\n  const context: ColorTokenContext = {hue, scheme}\n\n  return {\n    _blend: blendMode[scheme === 'light' ? 0 : 1],\n    bg: _color(context, tokens?.bg),\n    border: _color(context, tokens?.border),\n    fg: _color(context, tokens?.fg),\n    muted: {\n      bg: _color(context, tokens?.muted?.bg),\n    },\n    placeholder: _color(context, tokens?.placeholder),\n  }\n}\n\nfunction buildSelectableColorTheme(\n  options: {\n    scheme: ThemeColorSchemeKey\n    tone: ThemeColorCardToneKey\n  },\n  config?: ThemeConfig,\n): ThemeColorButtonMode_v2 {\n  const {scheme, tone: cardTone} = options\n\n  const tones: Partial<ThemeColorButtonMode_v2> = {}\n\n  for (const tone of THEME_COLOR_STATE_TONES) {\n    tones[tone] = buildSelectableStatesColorTheme({cardTone, scheme, tone}, config)\n  }\n\n  return tones as ThemeColorButtonMode_v2\n}\n\nfunction buildSelectableStatesColorTheme(\n  options: {\n    cardTone: ThemeColorCardToneKey\n    scheme: ThemeColorSchemeKey\n    tone: ThemeColorStateToneKey\n  },\n  config?: ThemeConfig,\n): ThemeColorButtonTone_v2 {\n  const {cardTone, scheme, tone} = options\n\n  const states: Partial<ThemeColorButtonTone_v2> = {}\n\n  for (const state of THEME_COLOR_STATES) {\n    states[state] = buildSelectableStateColorTheme({cardTone, tone, scheme, state}, config)\n  }\n\n  return states as ThemeColorButtonTone_v2\n}\n\nfunction buildSelectableStateColorTheme(\n  options: {\n    cardTone: ThemeColorCardToneKey\n    scheme: ThemeColorSchemeKey\n    state: ThemeColorStateKey\n    tone: ThemeColorStateToneKey\n  },\n  config?: ThemeConfig,\n): ThemeColorState_v2 {\n  const {cardTone, scheme, state, tone} = options\n  const cardTokens = config?.color?.base?.[cardTone]\n  const tokens = config?.color?.selectable?.[tone]?.[state]\n\n  const hue = tokens?._hue || cardTokens?._hue || 'gray'\n  const blendMode = tokens?._blend || ['screen', 'multiply']\n  const context: ColorTokenContext = {hue, scheme}\n\n  return {\n    _blend: blendMode[scheme === 'light' ? 0 : 1],\n    accent: {\n      fg: _color(context, tokens?.accent?.fg),\n    },\n    avatar: buildAvatarColorTheme({scheme}, tokens),\n    badge: buildBadgeColorTheme(tokens?.badge, {scheme}, config),\n    bg: _color(context, tokens?.bg),\n    border: _color(context, tokens?.border),\n    code: {\n      bg: _color(context, tokens?.code?.bg),\n      fg: _color(context, tokens?.code?.fg),\n    },\n    fg: _color(context, tokens?.fg),\n    icon: _color(context, tokens?.icon),\n    muted: {\n      bg: _color(context, tokens?.muted?.bg),\n      fg: _color(context, tokens?.muted?.fg),\n    },\n    kbd: {\n      bg: _color(context, tokens?.kbd?.bg),\n      fg: _color(context, tokens?.kbd?.fg),\n      border: _color(context, tokens?.kbd?.border),\n    },\n    link: {\n      fg: _color(context, tokens?.link?.fg),\n    },\n    skeleton: {\n      from: _color(context, tokens?.skeleton?.from),\n      to: _color(context, tokens?.skeleton?.to),\n    },\n  }\n}\n\nfunction buildSyntaxColorTheme(\n  options: {scheme: ThemeColorSchemeKey},\n  config?: ThemeConfig,\n): ThemeColorSyntax {\n  const {scheme} = options\n  const tokens = config?.color?.syntax\n  const context: ColorTokenContext = {hue: 'gray', scheme}\n\n  return {\n    atrule: _color(context, tokens?.atrule),\n    attrName: _color(context, tokens?.attrName),\n    attrValue: _color(context, tokens?.attrValue),\n    attribute: _color(context, tokens?.attribute),\n    boolean: _color(context, tokens?.boolean),\n    builtin: _color(context, tokens?.builtin),\n    cdata: _color(context, tokens?.cdata),\n    char: _color(context, tokens?.char),\n    class: _color(context, tokens?.class),\n    className: _color(context, tokens?.className),\n    comment: _color(context, tokens?.comment),\n    constant: _color(context, tokens?.constant),\n    deleted: _color(context, tokens?.deleted),\n    doctype: _color(context, tokens?.doctype),\n    entity: _color(context, tokens?.entity),\n    function: _color(context, tokens?.function),\n    hexcode: _color(context, tokens?.hexcode),\n    id: _color(context, tokens?.id),\n    important: _color(context, tokens?.important),\n    inserted: _color(context, tokens?.inserted),\n    keyword: _color(context, tokens?.keyword),\n    number: _color(context, tokens?.number),\n    operator: _color(context, tokens?.operator),\n    prolog: _color(context, tokens?.prolog),\n    property: _color(context, tokens?.property),\n    pseudoClass: _color(context, tokens?.pseudoClass),\n    pseudoElement: _color(context, tokens?.pseudoElement),\n    punctuation: _color(context, tokens?.punctuation),\n    regex: _color(context, tokens?.regex),\n    selector: _color(context, tokens?.selector),\n    string: _color(context, tokens?.string),\n    symbol: _color(context, tokens?.symbol),\n    tag: _color(context, tokens?.tag),\n    unit: _color(context, tokens?.unit),\n    url: _color(context, tokens?.url),\n    variable: _color(context, tokens?.variable),\n  }\n}\n","import {color} from '@sanity/color'\n\nimport {ThemeColorPalette} from '../config'\n\nexport const defaultColorPalette: ThemeColorPalette = color\n","import {RGB, RGBA} from '../types'\n\nfunction mixChannel(b: number, s: number, weight: number) {\n  const diff = s - b\n\n  const delta = diff * weight\n\n  return b + delta\n}\n\n/**\n * Apply the \\`mix\\` blend mode\n * @internal\n */\nexport function mix(b: RGB | RGBA, s: RGB | RGBA, weight: number): RGB {\n  return {\n    r: mixChannel(b.r, s.r, weight),\n    g: mixChannel(b.g, s.g, weight),\n    b: mixChannel(b.b, s.b, weight),\n  }\n}\n","import {RGB, RGBA} from '../types'\n\nfunction multiplyChannel(b: number, s: number) {\n  return b * s\n}\n\n/**\n * Apply the \\`multiply\\` blend mode\n * Source: https://www.w3.org/TR/compositing-1/#blendingmultiply\n * @internal\n */\nexport function multiply(b: RGB | RGBA, s: RGB | RGBA): RGB {\n  return {\n    r: multiplyChannel(b.r / 255, s.r / 255) * 255,\n    g: multiplyChannel(b.g / 255, s.g / 255) * 255,\n    b: multiplyChannel(b.b / 255, s.b / 255) * 255,\n  }\n}\n","import {RGB, RGBA} from '../types'\n\nfunction screenChannel(b: number, s: number) {\n  return b + s - b * s\n}\n\n/**\n * Apply the \\`screen\\` blend mode\n * Source: https://www.w3.org/TR/compositing-1/#blendingscreen\n * @internal\n */\nexport function screen(b: RGB | RGBA, s: RGB | RGBA): RGB {\n  return {\n    r: screenChannel(b.r / 255, s.r / 255) * 255,\n    g: screenChannel(b.g / 255, s.g / 255) * 255,\n    b: screenChannel(b.b / 255, s.b / 255) * 255,\n  }\n}\n","export function lerp(x: number, y: number, a: number): number {\n  return x * (1 - a) + y * a\n}\n\nexport function invlerp(x: number, y: number, a: number): number {\n  return clamp((a - x) / (y - x))\n}\n\nexport function clamp(a: number, min = 0, max = 1): number {\n  return Math.min(max, Math.max(min, a))\n}\n\nexport function range(x1: number, y1: number, x2: number, y2: number, a: number): number {\n  return lerp(x2, y2, invlerp(x1, y1, a))\n}\n\nexport function round(value: number): number {\n  return Math.round(value)\n}\n","import {clamp, round} from '../utils'\nimport {HSL, RGB, RGBA} from './types'\n\n/**\n * @internal\n */\nexport function hexToRgb(hex: string): RGB {\n  if (hex.length === 4) {\n    const hexR = hex.slice(1, 2)\n    const hexG = hex.slice(2, 3)\n    const hexB = hex.slice(3, 4)\n\n    return {\n      r: parseInt(hexR + hexR, 16),\n      g: parseInt(hexG + hexG, 16),\n      b: parseInt(hexB + hexB, 16),\n    }\n  }\n\n  return {\n    r: parseInt(hex.slice(1, 3), 16),\n    g: parseInt(hex.slice(3, 5), 16),\n    b: parseInt(hex.slice(5, 7), 16),\n  }\n}\n\n/**\n * @internal\n */\nexport function rgbaToRGBA(rgba: string): RGBA {\n  const values = rgba.replace(/rgba\\(|\\)/g, '').split(',')\n\n  return {\n    r: parseInt(values[0]),\n    g: parseInt(values[1]),\n    b: parseInt(values[2]),\n    a: parseFloat(values[3]),\n  }\n}\n\n/**\n * @internal\n */\nexport function rgbToHex(color: RGB | RGBA): string {\n  const r = round(clamp(Math.round(color.r), 0, 255))\n  const g = round(clamp(Math.round(color.g), 0, 255))\n  const b = round(clamp(Math.round(color.b), 0, 255))\n\n  if ('a' in color) {\n    return `rgba(${r},${g},${b},${color.a})`\n  }\n\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)\n}\n\n/**\n * @internal\n * @see https://css-tricks.com/converting-color-spaces-in-javascript/\n */\nexport function rgbToHsl({r, g, b}: RGB): HSL {\n  // Make r, g, and b fractions of 1\n  r /= 255\n  g /= 255\n  b /= 255\n\n  // Find greatest and smallest channel values\n  const cmin = Math.min(r, g, b)\n  const cmax = Math.max(r, g, b)\n  const delta = cmax - cmin\n\n  let h = 0\n  let s = 0\n  let l = 0\n\n  // Calculate hue\n  // No difference\n  if (delta == 0) h = 0\n  // Red is max\n  else if (cmax == r) h = ((g - b) / delta) % 6\n  // Green is max\n  else if (cmax == g) h = (b - r) / delta + 2\n  // Blue is max\n  else h = (r - g) / delta + 4\n\n  h = Math.round(h * 60)\n\n  // Make negative hues positive behind 360°\n  if (h < 0) h += 360\n\n  // Calculate lightness\n  l = (cmax + cmin) / 2\n\n  // Calculate saturation\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1))\n\n  // Multiply l and s by 100\n  s = +(s * 100).toFixed(1)\n  l = +(l * 100).toFixed(1)\n\n  return {h, s, l}\n}\n\n/**\n * @internal\n */\nexport function hslToRgb(hsl: HSL): RGB {\n  // Must be fractions of 1\n  const s = hsl.s / 100\n  const l = hsl.l / 100\n\n  const c = (1 - Math.abs(2 * l - 1)) * s\n  const x = c * (1 - Math.abs(((hsl.h / 60) % 2) - 1))\n  const m = l - c / 2\n\n  let r = 0\n  let g = 0\n  let b = 0\n\n  if (0 <= hsl.h && hsl.h < 60) {\n    r = c\n    g = x\n    b = 0\n  } else if (60 <= hsl.h && hsl.h < 120) {\n    r = x\n    g = c\n    b = 0\n  } else if (120 <= hsl.h && hsl.h < 180) {\n    r = 0\n    g = c\n    b = x\n  } else if (180 <= hsl.h && hsl.h < 240) {\n    r = 0\n    g = x\n    b = c\n  } else if (240 <= hsl.h && hsl.h < 300) {\n    r = x\n    g = 0\n    b = c\n  } else if (300 <= hsl.h && hsl.h < 360) {\n    r = c\n    g = 0\n    b = x\n  }\n\n  return {\n    r: Math.round((r + m) * 255),\n    g: Math.round((g + m) * 255),\n    b: Math.round((b + m) * 255),\n  }\n}\n","import {hexToRgb, hslToRgb, rgbaToRGBA} from './convert'\nimport {HSL, RGB, RGBA} from './types'\n\nconst HEX_CHARS = '0123456789ABCDEFabcdef'\n\nconst HSL_RE = /hsl\\(\\s*(\\d+)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*\\)/i\n\nfunction isHexChars(str: string) {\n  for (const c of str) {\n    if (HEX_CHARS.indexOf(c) === -1) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction isHex(str: string) {\n  if (str[0] !== '#') return false\n\n  // Accept both #000 and #000000\n  if (!(str.length === 4 || str.length === 7)) return false\n\n  return isHexChars(str.slice(1))\n}\n\nfunction parseHsl(str: string): HSL {\n  const res = HSL_RE.exec(str)\n\n  if (!res) {\n    throw new Error(`parseHsl: string is not a HSL color: \"${str}\"`)\n  }\n\n  return {h: parseInt(res[1]), s: parseFloat(res[3]), l: parseFloat(res[5])}\n}\n\n/**\n * @internal\n */\nexport function parseColor(color: unknown): RGB | RGBA {\n  if (!color) return {r: 0, g: 0, b: 0}\n\n  if (typeof color !== 'string') {\n    throw new Error('parseColor: expected a string')\n  }\n\n  if (isHex(color)) {\n    return hexToRgb(color)\n  }\n\n  if (color.startsWith('hsl(')) {\n    return hslToRgb(parseHsl(color))\n  }\n\n  if (color.startsWith('rgba(')) {\n    return rgbaToRGBA(color)\n  }\n\n  throw new Error(`parseColor: unexpected color format: \"${color}\"`)\n}\n","import {parseColor} from './parse'\nimport {RGB, RGBA} from './types'\n\n/** @internal */\nexport function getContrastRatio(bg: string, fg: string): number {\n  const rgb1 = parseColor(bg) // bg: RGB | RGBA, fg: RGB | RGBA\n  const rgb2 = parseColor(fg)\n\n  // convert the two colors from sRGB to linear-light RGB\n  const c1 = rgb_lrgb(rgb1)\n  const c2 = rgb_lrgb(rgb2)\n\n  // compute the relative luminances\n  const l1 = lrgb_luminance(c1)\n  const l2 = lrgb_luminance(c2)\n\n  // compute the contrast ratio\n  return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05)\n}\n\nfunction rgb_lrgb({r, g, b}: RGB | RGBA): [number, number, number] {\n  return [rgb_lrgb1(r / 255), rgb_lrgb1(g / 255), rgb_lrgb1(b / 255)]\n}\n\nfunction rgb_lrgb1(v: number) {\n  return v <= 0.04045 ? v / 12.92 : ((v + 0.055) / 1.055) ** 2.4\n}\n\nfunction lrgb_luminance([r, g, b]: [number, number, number]) {\n  return 0.2126 * r + 0.7152 * g + 0.0722 * b\n}\n","import {parseColor} from './parse'\n\n/**\n * @internal\n */\nexport function rgba(color: unknown, a: number): string {\n  const rgb = parseColor(color)\n\n  return `rgba(${rgb.r},${rgb.g},${rgb.b},${a})`\n}\n","import {RGB, multiply, parseColor, rgbToHex, screen} from './lib/color-fns'\nimport {clamp, range} from './lib/utils'\n\nconst RGB_RANGE: [number, number] = [0, 255]\n\nexport function mixThemeColor(\n  value: string,\n  options: {\n    bg?: string\n    blendMode: 'multiply' | 'screen'\n    black: string\n    white: string\n  },\n): string {\n  const {blendMode} = options\n\n  const color = parseColor(value)\n  const black = parseColor(options.black)\n  const white = parseColor(options.white)\n\n  const bg = options.bg ? parseColor(options.bg) : blendMode === 'multiply' ? white : black\n\n  const paletteRange: {r: [number, number]; g: [number, number]; b: [number, number]} = {\n    r: [black.r, white.r],\n    g: [black.g, white.g],\n    b: [black.b, white.b],\n  }\n\n  const convertedBgColor: RGB = {\n    r: clamp(range(...paletteRange.r, ...RGB_RANGE, bg.r), ...RGB_RANGE),\n    g: clamp(range(...paletteRange.g, ...RGB_RANGE, bg.g), ...RGB_RANGE),\n    b: clamp(range(...paletteRange.b, ...RGB_RANGE, bg.b), ...RGB_RANGE),\n  }\n\n  const convertedColor: RGB = {\n    r: clamp(range(...paletteRange.r, ...RGB_RANGE, color.r), ...RGB_RANGE),\n    g: clamp(range(...paletteRange.g, ...RGB_RANGE, color.g), ...RGB_RANGE),\n    b: clamp(range(...paletteRange.b, ...RGB_RANGE, color.b), ...RGB_RANGE),\n  }\n\n  const resultColor =\n    blendMode === 'multiply'\n      ? multiply(convertedBgColor, convertedColor)\n      : screen(convertedBgColor, convertedColor)\n\n  const v: RGB = {\n    r: clamp(range(...RGB_RANGE, ...paletteRange.r, resultColor.r), ...paletteRange.r),\n    g: clamp(range(...RGB_RANGE, ...paletteRange.g, resultColor.g), ...paletteRange.g),\n    b: clamp(range(...RGB_RANGE, ...paletteRange.b, resultColor.b), ...paletteRange.b),\n  }\n\n  return rgbToHex(v)\n}\n","import {ColorTint as ColorPaletteValue} from '@sanity/color'\nimport {ThemeColorPalette, parseTokenValue} from '../config'\nimport {ThemeColorBlendModeKey} from '../system'\nimport {hexToRgb, mix, rgbToHex, rgba} from './lib/color-fns'\nimport {mixThemeColor} from './mixThemeColor'\n\nexport interface RenderColorValueOptions {\n  bg?: string\n  blendMode: ThemeColorBlendModeKey\n  colorPalette: ThemeColorPalette\n}\n\nexport function renderColorValue(str: string, options: RenderColorValueOptions): string {\n  const {bg, blendMode, colorPalette} = options\n\n  if (bg === 'white') {\n    throw new Error('Cannot blend with white background')\n  }\n\n  const node = parseTokenValue(str)\n\n  if (!node || node.type !== 'color') {\n    throw new Error(`Invalid color token value: ${str}`)\n  }\n\n  let hex = ''\n\n  if (node.key === 'black') {\n    hex = renderColorHex(colorPalette.black)\n  }\n\n  if (node.key === 'white') {\n    hex = renderColorHex(colorPalette.white)\n  }\n\n  if (node.hue && node.tint) {\n    hex = renderColorHex(colorPalette[node.hue][node.tint])\n  }\n\n  if (!hex) {\n    throw new Error(`Invalid color token value: ${str}`)\n  }\n\n  const hexBeforeMix = hex\n\n  const mixOptions = {\n    blendMode,\n    bg,\n    black: renderColorHex(colorPalette.black),\n    // opacity: node.opacity,\n    white: renderColorHex(colorPalette.white),\n  }\n\n  try {\n    hex = mixThemeColor(hex, mixOptions)\n\n    if (bg && node.mix !== undefined) {\n      const from = hexToRgb(bg)\n      const to = hexToRgb(hex)\n\n      hex = rgbToHex(mix(from, to, node.mix))\n    }\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('could not blend', hex, mixOptions)\n    throw err\n  }\n\n  if (hex === '#aN') {\n    // eslint-disable-next-line no-console\n    console.warn(`invalid color token value: ${str}`)\n    hex = hexBeforeMix\n  }\n\n  if (node.opacity !== undefined) {\n    hex = rgba(hex, node.opacity)\n  }\n\n  return hex\n}\n\nfunction renderColorHex(color: string | ColorPaletteValue) {\n  return typeof color === 'string' ? color : color.hex\n}\n","import {COLOR_HUES} from '@sanity/color'\nimport {ThemeColorPalette, ThemeConfig} from '../config'\nimport {defaultColorPalette} from '../defaults/colorPalette'\nimport {\n  THEME_COLOR_STATE_TONES,\n  ThemeColorAvatar_v2,\n  ThemeColorBadgeTone_v2,\n  ThemeColorBadge_v2,\n  ThemeColorBlendModeKey,\n  ThemeColorButtonMode_v2,\n  ThemeColorButtonTone_v2,\n  ThemeColorButton_v2,\n  ThemeColorCardToneKey,\n  ThemeColorCard_v2,\n  ThemeColorInputMode_v2,\n  ThemeColorInputState_v2,\n  ThemeColorInput_v2,\n  ThemeColorKBD,\n  ThemeColorScheme_v2,\n  ThemeColorSchemes_v2,\n  ThemeColorSelectableTone_v2,\n  ThemeColorSelectable_v2,\n  ThemeColorShadow,\n  ThemeColorState_v2,\n  ThemeColorSyntax,\n} from '../system'\nimport {RenderColorValueOptions, renderColorValue} from './renderColorValue'\n\nexport function renderThemeColorSchemes(\n  value: ThemeColorSchemes_v2,\n  config?: ThemeConfig,\n): ThemeColorSchemes_v2 {\n  const colorPalette = config?.palette ?? defaultColorPalette\n\n  return {\n    light: renderThemeColorScheme(colorPalette, value.light),\n    dark: renderThemeColorScheme(colorPalette, value.dark),\n  }\n}\n\nfunction renderThemeColorScheme(\n  colorPalette: ThemeColorPalette,\n  value: ThemeColorScheme_v2,\n): ThemeColorScheme_v2 {\n  const toneEntries = Object.entries(value) as [ThemeColorCardToneKey, ThemeColorCard_v2][]\n\n  const [, transparentTone] = toneEntries.find(([k]) => k === 'transparent')!\n  const [, defaultTone] = toneEntries.find(([k]) => k === 'default')!\n\n  // The `transparent` and `default` tones are special cases, so we render them first\n  // (rendered without a `bg` option).\n  // But the rest of the tones are rendered on top of the `default` tone's `bg`.\n  const renderedTransparentTone = renderThemeColor(transparentTone, {colorPalette})\n  const renderedDefaultTone = renderThemeColor(defaultTone, {colorPalette})\n\n  // Get the `default` tone's `bg` property\n  const bg = renderedDefaultTone.bg\n\n  if (bg === 'white') {\n    throw new Error('Cannot blend with white background')\n  }\n\n  return Object.fromEntries([\n    ['transparent', renderedTransparentTone],\n    ['default', renderedDefaultTone],\n    ...toneEntries\n      .filter(([k]) => k !== 'default' && k !== 'transparent')\n      .map(([k, v]) => [k, renderThemeColor(v, {bg, colorPalette})]),\n  ]) as ThemeColorScheme_v2\n}\n\nfunction renderThemeColor(\n  value: ThemeColorCard_v2,\n  options: {\n    bg?: string\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorCard_v2 {\n  const {colorPalette, bg} = options\n  const blendMode = value._blend || 'multiply'\n  const baseBg = renderColorValue(value.bg, {colorPalette, bg, blendMode})\n  const colorOptions: RenderColorValueOptions = {colorPalette, bg: baseBg, blendMode}\n\n  const button = renderThemeColorButton(value.button, {\n    baseBg,\n    blendMode,\n    colorPalette,\n  })\n\n  const selectable = renderThemeColorSelectable(value.selectable, {\n    colorPalette,\n    baseBg,\n    blendMode,\n  })\n\n  const shadow: ThemeColorShadow = {\n    outline: renderColorValue(value.shadow.outline, colorOptions),\n    umbra: renderColorValue(value.shadow.umbra, {\n      ...colorOptions,\n      bg: undefined,\n      colorPalette: {...colorPalette, black: '#000000'},\n    }),\n    penumbra: renderColorValue(value.shadow.penumbra, {\n      ...colorOptions,\n      bg: undefined,\n      colorPalette: {...colorPalette, black: '#000000'},\n    }),\n    ambient: renderColorValue(value.shadow.ambient, {\n      ...colorOptions,\n      bg: undefined,\n      colorPalette: {...colorPalette, black: '#000000'},\n    }),\n  }\n\n  return {\n    _blend: blendMode,\n    _dark: value._dark,\n    accent: {\n      fg: renderColorValue(value.accent.fg, colorOptions),\n    },\n    avatar: renderThemeColorAvatar(value.avatar, {baseBg, colorPalette, blendMode}),\n    backdrop: renderColorValue(value.backdrop, colorOptions),\n    badge: renderThemeColorBadge(value.badge, {baseBg, colorPalette, blendMode}),\n    bg: baseBg,\n    border: renderColorValue(value.border, colorOptions),\n    button,\n    code: {\n      bg: renderColorValue(value.code.bg, colorOptions),\n      fg: renderColorValue(value.code.fg, colorOptions),\n    },\n    fg: renderColorValue(value.fg, colorOptions),\n    focusRing: renderColorValue(value.focusRing, colorOptions),\n    icon: renderColorValue(value.icon, colorOptions),\n    input: renderThemeColorInput(value.input, {baseBg, colorPalette, blendMode}),\n    kbd: renderThemeColorKBD(value.kbd, {baseBg, colorPalette, blendMode}),\n    link: {\n      fg: renderColorValue(value.link.fg, colorOptions),\n    },\n    muted: {\n      bg: renderColorValue(value.muted.bg, colorOptions),\n      fg: renderColorValue(value.muted.fg, colorOptions),\n    },\n    shadow,\n    skeleton: {\n      from: renderColorValue(value.skeleton.from, colorOptions),\n      to: renderColorValue(value.skeleton.to, colorOptions),\n    },\n    syntax: renderSyntaxColorTheme(value.syntax, {baseBg, colorPalette, blendMode}),\n    selectable,\n  }\n}\n\nfunction renderThemeColorKBD(\n  value: ThemeColorKBD,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorKBD {\n  const {baseBg, blendMode, colorPalette} = options\n\n  const rootOptions: RenderColorValueOptions = {\n    bg: baseBg,\n    blendMode,\n    colorPalette,\n  }\n\n  const bg = renderColorValue(value.bg, rootOptions)\n\n  const colorOptions: RenderColorValueOptions = {\n    bg,\n    blendMode,\n    colorPalette,\n  }\n\n  return {\n    bg,\n    fg: renderColorValue(value.fg, colorOptions),\n    border: renderColorValue(value.border, colorOptions),\n  }\n}\n\nfunction renderThemeColorAvatar(\n  value: ThemeColorAvatar_v2,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorAvatar_v2 {\n  const colorAvatar = {} as ThemeColorAvatar_v2\n\n  for (const hue of COLOR_HUES) {\n    colorAvatar[hue] = renderThemeColorAvatarColor(value[hue], options)\n  }\n\n  return colorAvatar\n}\n\nfunction renderThemeColorAvatarColor(\n  value: ThemeColorAvatar_v2['gray'],\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorAvatar_v2['gray'] {\n  const {baseBg, blendMode: rootBlendMode, colorPalette} = options\n  const blendMode = value._blend || 'multiply'\n\n  const rootOptions: RenderColorValueOptions = {\n    bg: baseBg,\n    blendMode: rootBlendMode,\n    colorPalette,\n  }\n\n  const bg = renderColorValue(value.bg, rootOptions)\n\n  const colorOptions: RenderColorValueOptions = {\n    bg,\n    blendMode,\n    colorPalette,\n  }\n\n  return {\n    _blend: blendMode,\n    bg,\n    fg: renderColorValue(value.fg, colorOptions),\n  }\n}\n\nfunction renderThemeColorBadge(\n  value: ThemeColorBadge_v2,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorBadge_v2 {\n  const colorBadge = {} as ThemeColorBadge_v2\n\n  for (const tone of THEME_COLOR_STATE_TONES) {\n    colorBadge[tone] = renderThemeColorBadgeColor(value[tone], options)\n  }\n\n  return colorBadge\n}\n\nfunction renderThemeColorBadgeColor(\n  value: ThemeColorBadgeTone_v2,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorBadgeTone_v2 {\n  const {baseBg, blendMode: rootBlendMode, colorPalette} = options\n\n  const blendMode = rootBlendMode\n\n  const rootOptions: RenderColorValueOptions = {\n    bg: baseBg,\n    blendMode: rootBlendMode,\n    colorPalette,\n  }\n\n  const bg = renderColorValue(value.bg, rootOptions)\n\n  const colorOptions: RenderColorValueOptions = {\n    bg,\n    blendMode,\n    colorPalette,\n  }\n\n  return {\n    bg,\n    dot: renderColorValue(value.dot, colorOptions),\n    fg: renderColorValue(value.fg, colorOptions),\n    icon: renderColorValue(value.icon, colorOptions),\n  }\n}\n\nfunction renderThemeColorButton(\n  value: ThemeColorButton_v2,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorButton_v2 {\n  return {\n    default: renderThemeColorButtonTones(value.default, options),\n    ghost: renderThemeColorButtonTones(value.ghost, options),\n    bleed: renderThemeColorButtonTones(value.bleed, options),\n  }\n}\n\nfunction renderThemeColorButtonTones(\n  value: ThemeColorButtonMode_v2,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorButtonMode_v2 {\n  const colorButtonMode = {} as ThemeColorButtonMode_v2\n\n  for (const tone of THEME_COLOR_STATE_TONES) {\n    colorButtonMode[tone] = renderThemeColorButtonStates(value[tone], options)\n  }\n\n  return colorButtonMode\n}\n\nfunction renderThemeColorButtonStates(\n  value: ThemeColorButtonTone_v2,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorButtonTone_v2 {\n  return {\n    enabled: renderThemeColorState(value.enabled, options),\n    hovered: renderThemeColorState(value.hovered, options),\n    pressed: renderThemeColorState(value.pressed, options),\n    selected: renderThemeColorState(value.selected, options),\n    disabled: renderThemeColorState(value.disabled, options),\n  }\n}\n\nfunction renderThemeColorState(\n  value: ThemeColorState_v2,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorState_v2 {\n  const {baseBg, blendMode: rootBlendMode, colorPalette} = options\n  const blendMode = value._blend || 'multiply'\n\n  const rootOptions: RenderColorValueOptions = {\n    bg: baseBg,\n    blendMode: rootBlendMode,\n    colorPalette,\n  }\n\n  const bg = renderColorValue(value.bg, rootOptions)\n\n  const colorOptions: RenderColorValueOptions = {\n    bg,\n    blendMode,\n    colorPalette,\n  }\n\n  return {\n    _blend: blendMode,\n    accent: {\n      fg: renderColorValue(value.accent.fg, colorOptions),\n    },\n    avatar: renderThemeColorAvatar(value.avatar, {baseBg: bg, colorPalette, blendMode}),\n    badge: renderThemeColorBadge(value.badge, {baseBg: bg, colorPalette, blendMode}),\n    bg,\n    border: renderColorValue(value.border, colorOptions),\n    code: {\n      bg: renderColorValue(value.code.bg, colorOptions),\n      fg: renderColorValue(value.code.fg, colorOptions),\n    },\n    fg: renderColorValue(value.fg, colorOptions),\n    icon: renderColorValue(value.icon, colorOptions),\n    link: {\n      fg: renderColorValue(value.link.fg, colorOptions),\n    },\n    muted: {\n      bg: renderColorValue(value.muted.bg, colorOptions),\n      fg: renderColorValue(value.muted.fg, colorOptions),\n    },\n    kbd: {\n      bg: renderColorValue(value.kbd.bg, colorOptions),\n      fg: renderColorValue(value.kbd.fg, colorOptions),\n      border: renderColorValue(value.kbd.border, colorOptions),\n    },\n    skeleton: {\n      from: renderColorValue(value.skeleton?.from, colorOptions),\n      to: renderColorValue(value.skeleton?.to, colorOptions),\n    },\n  }\n}\n\nfunction renderThemeColorInput(\n  value: ThemeColorInput_v2,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorInput_v2 {\n  return {\n    default: renderInputStatesColorTheme(value.default, options),\n    invalid: renderInputStatesColorTheme(value.invalid, options),\n  }\n}\n\nfunction renderInputStatesColorTheme(\n  value: ThemeColorInputMode_v2,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorInputMode_v2 {\n  return {\n    enabled: renderInputStateColorTheme(value.enabled, options),\n    hovered: renderInputStateColorTheme(value.hovered, options),\n    readOnly: renderInputStateColorTheme(value.readOnly, options),\n    disabled: renderInputStateColorTheme(value.disabled, options),\n  }\n}\n\nfunction renderInputStateColorTheme(\n  value: ThemeColorInputState_v2,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorInputState_v2 {\n  const {baseBg, blendMode: rootBlendMode, colorPalette} = options\n  const blendMode = value._blend || 'multiply'\n  const rootOptions: RenderColorValueOptions = {colorPalette, bg: baseBg, blendMode: rootBlendMode}\n  const bg = renderColorValue(value.bg, rootOptions)\n  const colorOptions: RenderColorValueOptions = {colorPalette, bg, blendMode}\n\n  return {\n    _blend: blendMode,\n    bg,\n    border: renderColorValue(value.border, colorOptions),\n    fg: renderColorValue(value.fg, colorOptions),\n    muted: {\n      bg: renderColorValue(value.muted.bg, colorOptions),\n    },\n    placeholder: renderColorValue(value.placeholder, colorOptions),\n  }\n}\n\nfunction renderThemeColorSelectable(\n  value: ThemeColorSelectable_v2,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorSelectable_v2 {\n  const colorSelectable = {} as ThemeColorSelectable_v2\n\n  for (const tone of THEME_COLOR_STATE_TONES) {\n    colorSelectable[tone] = renderThemeColorSelectableStates(value[tone], options)\n  }\n\n  return colorSelectable\n}\n\nfunction renderThemeColorSelectableStates(\n  value: ThemeColorSelectableTone_v2,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorSelectableTone_v2 {\n  return {\n    enabled: renderThemeColorState(value.enabled, options),\n    hovered: renderThemeColorState(value.hovered, options),\n    pressed: renderThemeColorState(value.pressed, options),\n    selected: renderThemeColorState(value.selected, options),\n    disabled: renderThemeColorState(value.disabled, options),\n  }\n}\n\nfunction renderSyntaxColorTheme(\n  value: ThemeColorSyntax,\n  options: {\n    baseBg: string\n    blendMode: ThemeColorBlendModeKey\n    colorPalette: ThemeColorPalette\n  },\n): ThemeColorSyntax {\n  const {colorPalette, baseBg, blendMode} = options\n  const colorOptions: RenderColorValueOptions = {colorPalette, bg: baseBg, blendMode}\n\n  return {\n    atrule: renderColorValue(value.atrule, colorOptions),\n    attrName: renderColorValue(value.attrName, colorOptions),\n    attrValue: renderColorValue(value.attrValue, colorOptions),\n    attribute: renderColorValue(value.attribute, colorOptions),\n    boolean: renderColorValue(value.boolean, colorOptions),\n    builtin: renderColorValue(value.builtin, colorOptions),\n    cdata: renderColorValue(value.cdata, colorOptions),\n    char: renderColorValue(value.char, colorOptions),\n    class: renderColorValue(value.class, colorOptions),\n    className: renderColorValue(value.className, colorOptions),\n    comment: renderColorValue(value.comment, colorOptions),\n    constant: renderColorValue(value.constant, colorOptions),\n    deleted: renderColorValue(value.deleted, colorOptions),\n    doctype: renderColorValue(value.doctype, colorOptions),\n    entity: renderColorValue(value.entity, colorOptions),\n    function: renderColorValue(value.function, colorOptions),\n    hexcode: renderColorValue(value.hexcode, colorOptions),\n    id: renderColorValue(value.id, colorOptions),\n    important: renderColorValue(value.important, colorOptions),\n    inserted: renderColorValue(value.inserted, colorOptions),\n    keyword: renderColorValue(value.keyword, colorOptions),\n    number: renderColorValue(value.number, colorOptions),\n    operator: renderColorValue(value.operator, colorOptions),\n    prolog: renderColorValue(value.prolog, colorOptions),\n    property: renderColorValue(value.property, colorOptions),\n    pseudoClass: renderColorValue(value.pseudoClass, colorOptions),\n    pseudoElement: renderColorValue(value.pseudoElement, colorOptions),\n    punctuation: renderColorValue(value.punctuation, colorOptions),\n    regex: renderColorValue(value.regex, colorOptions),\n    selector: renderColorValue(value.selector, colorOptions),\n    string: renderColorValue(value.string, colorOptions),\n    symbol: renderColorValue(value.symbol, colorOptions),\n    tag: renderColorValue(value.tag, colorOptions),\n    unit: renderColorValue(value.unit, colorOptions),\n    url: renderColorValue(value.url, colorOptions),\n    variable: renderColorValue(value.variable, colorOptions),\n  }\n}\n","import {ThemeConfig} from '../config'\nimport {defaultThemeConfig} from '../defaults/config'\nimport {defaultThemeFonts} from '../defaults/fonts'\nimport {RootTheme, RootTheme_v2} from '../system'\nimport {v2_v0} from '../versioning'\nimport {buildColorTheme} from './buildColorTheme'\nimport {renderThemeColorSchemes} from './renderColorTheme'\n\n/** @internal */\nexport function buildTheme(config?: ThemeConfig): RootTheme {\n  const colorTheme = buildColorTheme(config)\n\n  const v2: RootTheme_v2 = {\n    _version: 2,\n    avatar: config?.avatar ?? defaultThemeConfig.avatar,\n    button: config?.button ?? defaultThemeConfig.button,\n    card: config?.card ?? defaultThemeConfig.card,\n    // How colors are generated:\n    // 1. Merge custom tokens with default tokens\n    // 2. Generate tree of color keys (gray/500, black, white, etc.)\n    // 3. Apply mixing and render to hex values\n    // render(build(mergeWithDefaults()))\n    color: renderThemeColorSchemes(colorTheme, config),\n    container: config?.container ?? defaultThemeConfig.container,\n    font: config?.font ?? defaultThemeFonts,\n    input: config?.input ?? defaultThemeConfig.input,\n    layer: config?.layer ?? defaultThemeConfig.layer,\n    media: config?.media ?? defaultThemeConfig.media,\n    radius: config?.radius ?? defaultThemeConfig.radius,\n    shadow: config?.shadow ?? defaultThemeConfig.shadow,\n    space: config?.space ?? defaultThemeConfig.space,\n    style: config?.style ?? defaultThemeConfig.style,\n  }\n\n  return v2_v0(v2)\n}\n","import {defaultThemeConfig} from './defaults/config'\nimport {\n  RootTheme,\n  RootTheme_v2,\n  Theme,\n  ThemeColor,\n  ThemeColorCardToneKey,\n  ThemeColorSchemeKey,\n} from './system'\nimport {is_v2, v0_v2, v2_v0} from './versioning'\n\n// cache[scheme][tone][rootTheme] = theme\nconst cache = new Map<\n  ThemeColorSchemeKey,\n  Map<ThemeColorCardToneKey, WeakMap<RootTheme | RootTheme_v2, Theme>>\n>()\n\n/** @internal */\nexport function getScopedTheme(\n  themeProp: RootTheme | RootTheme_v2,\n  scheme: ThemeColorSchemeKey,\n  tone: ThemeColorCardToneKey,\n): Theme {\n  const cachedTheme = _getCachedTheme(themeProp, scheme, tone)\n\n  if (cachedTheme) return cachedTheme\n\n  const v0 = is_v2(themeProp) ? v2_v0(themeProp) : themeProp\n  const v2 = is_v2(themeProp) ? themeProp : v0_v2(themeProp)\n\n  const colorScheme_v0 = v0.color[scheme] || v0.color.light\n  const color_v0 = (colorScheme_v0 as Record<string, ThemeColor>)[tone] || colorScheme_v0.default\n  const layer_v0 = v0.layer || defaultThemeConfig.layer\n\n  const colorScheme_v2 = v2.color[scheme] || v2.color.light\n  const color_v2 = colorScheme_v2[tone] || colorScheme_v2.default\n  const layer_v2 = v2.layer || defaultThemeConfig.layer\n\n  const theme: Theme = {\n    sanity: {\n      ...v0,\n      color: color_v0,\n      layer: layer_v0,\n      v2: {\n        ...v2,\n        _resolved: true,\n        color: color_v2,\n        layer: layer_v2,\n      },\n    },\n  }\n\n  _setCachedTheme(themeProp, scheme, tone, theme)\n\n  return theme\n}\n\nfunction _getCachedTheme(\n  rootTheme: RootTheme | RootTheme_v2,\n  scheme: ThemeColorSchemeKey,\n  tone: ThemeColorCardToneKey,\n) {\n  const schemeCache = cache.get(scheme)\n\n  if (!schemeCache) return undefined\n\n  const toneCache = schemeCache.get(tone)\n\n  if (!toneCache) return undefined\n\n  return toneCache.get(rootTheme)\n}\n\nfunction _setCachedTheme(\n  rootTheme: RootTheme | RootTheme_v2,\n  scheme: ThemeColorSchemeKey,\n  tone: ThemeColorCardToneKey,\n  theme: Theme,\n) {\n  if (!cache.has(scheme)) cache.set(scheme, new Map())\n\n  const schemeCache = cache.get(scheme)!\n\n  if (!schemeCache.has(tone)) schemeCache.set(tone, new WeakMap())\n\n  const toneCache = schemeCache.get(tone)!\n\n  toneCache.set(rootTheme, theme)\n}\n"],"names":["createSelectableTones","opts","base","dark","solid","muted","default","_createSelectableStates","primary","positive","caution","critical","tone","enabled","selectable","state","hovered","pressed","selected","disabled","createSolidTones","name","transparent","createButtonTones","mode","button","createButtonModes","ghost","bleed","createCardStates","card","black","white","colors","lightest","lighter","light","darker","darkest","spots","gray","red","orange","yellow","green","cyan","blue","purple","magenta","tones","bg","fg","border","focusRing","defaultOpts","shadow","outline","umbra","penumbra","ambient","skeleton","from","to","color","bg2","icon","accent","link","code","__spreadProps","__spreadValues","input","placeholder","spot","key","syntax","atrule","attrName","attrValue","attribute","boolean","builtin","cdata","char","class","className","comment","constant","deleted","doctype","entity","function","hexcode","id","important","inserted","keyword","number","operator","prolog","property","pseudoClass","pseudoElement","punctuation","regex","selector","string","symbol","tag","unit","url","variable","createInputModes","readOnly","invalid","createMutedTones","createSpot","createColorTheme","partialOpts","builders","_createColorScheme","_createColor","defaultThemeFonts","family","weights","regular","medium","semibold","bold","sizes","ascenderHeight","descenderHeight","fontSize","iconSize","lineHeight","letterSpacing","heading","label","text","is_v0","themeProp","_version","is_v2","cache","WeakMap","v0_v2","v0","v2","cached_v2","get","avatar","container","_unused_focusRing","fonts","font","layer","media","radius","shadows","space","styles","style","defaultThemeConfig","themeColor_v0_v2","neutral","suggest","checkbox","radio","switch","set","v2_v0","cachedTheme","themeColor_v2_v0","color_v2","_dark","inputStatesThemeColor_v2_v0","t","inputStateThemeColor_v2_v0","THEME_COLOR_SCHEMES","THEME_COLOR_BLEND_MODES","THEME_COLOR_CARD_TONES","THEME_COLOR_STATE_TONES","THEME_COLOR_STATES","THEME_COLOR_BUTTON_MODES","THEME_COLOR_INPUT_MODES","THEME_COLOR_INPUT_STATES","THEME_COLOR_AVATAR_COLORS","COLOR_HUES","isColorBlendModeValue","str","includes","isColorHueKey","isColorTintKey","COLOR_TINTS","isColorButtonMode","COLOR_CONFIG_STATE_KEYS","COLOR_CONFIG_CARD_KEYS","COLOR_CONFIG_BLEND_KEYS","COLOR_CONFIG_AVATAR_COLORS","COLOR_CONFIG_CARD_TONES","COLOR_CONFIG_STATE_TONES","COLOR_CONFIG_STATES","COLOR_CONFIG_INPUT_MODES","COLOR_CONFIG_INPUT_STATES","parseTokenKey","segments","split","segment0","shift","isColorConfigBaseTone","join","isColorConfigBaseKey","type","isColorConfigBlendKey","segment1","isColorConfigStateTone","segment2","isColorConfigStateKey","isColorMixPercentValue","test","parseTokenValue","nextSegment","segment0mix","tint","mix","Number","slice","isColorOpacityValue","opacity","isColorValue","hue","segment1mix","value","isColorTokenValue","compileColorTokenValue","node","undefined","DEFAULT_COLOR_TOKEN_VALUE","resolveColorTokenValue","context","scheme","Error","defaultColorTokens","_blend","backdrop","badge","dot","kbd","_hue","isRecord","Boolean","Array","isArray","merge","records","_records","filter","length","reduce","_merge","acc","source","Object","keys","prevValue","nextValue","resolveColorTokens","inputTokens","tokens","resolveBaseColorTokens","resolveButtonColorTokens","resolveInputColorTokens","resolveSelectableColorTokens","sparseTokens","resolveBaseColorTones","spec","_a","_b","_c","_d","resolveButtonToneColorTokens","resolveButtonModeColorTokens","resolveButtonStateColorTokens","resolveInputModeColorTokens","states","resolveInputStateColorTokens","resolveSelectableToneColorTokens","resolveSelectableStateColorTokens","buildColorTheme","config","resolvedConfig","buildColorScheme","options","colorScheme","buildCardColorTheme","_color","buildAvatarColorTheme","buildBadgeColorTheme","buildButtonColorTheme","buildInputColorTheme","buildSelectableColorTheme","buildShadowColorTheme","buildSyntaxColorTheme","stateTokens","_buildAvatarColorTheme","colorBadge","_buildBadgeColorTheme","parentTokens","cardTone","modes","buildButtonTonesColorTheme","buildButtonStatesColorTheme","buildButtonStateColorTheme","cardTokens","blendMode","buildInputStatesColorTheme","buildInputStateColorTheme","buildSelectableStatesColorTheme","buildSelectableStateColorTheme","defaultColorPalette","mixChannel","b","s","weight","delta","r","g","multiplyChannel","multiply","screenChannel","screen","lerp","x","y","a","invlerp","clamp","min","max","Math","range","x1","y1","x2","y2","round","hexToRgb","hex","hexR","hexG","hexB","parseInt","rgbaToRGBA","rgba","values","replace","parseFloat","rgbToHex","toString","rgbToHsl","cmin","cmax","h","l","abs","toFixed","hslToRgb","hsl","c","m","HEX_CHARS","HSL_RE","isHexChars","indexOf","isHex","parseHsl","res","exec","parseColor","startsWith","getContrastRatio","rgb1","rgb2","c1","rgb_lrgb","c2","l1","lrgb_luminance","l2","rgb_lrgb1","v","rgb","RGB_RANGE","mixThemeColor","paletteRange","convertedBgColor","convertedColor","resultColor","renderColorValue","colorPalette","renderColorHex","hexBeforeMix","mixOptions","err","console","warn","renderThemeColorSchemes","palette","renderThemeColorScheme","toneEntries","entries","transparentTone","find","k","defaultTone","renderedTransparentTone","renderThemeColor","renderedDefaultTone","fromEntries","map","baseBg","colorOptions","renderThemeColorButton","renderThemeColorSelectable","renderThemeColorAvatar","renderThemeColorBadge","renderThemeColorInput","renderThemeColorKBD","renderSyntaxColorTheme","rootOptions","colorAvatar","renderThemeColorAvatarColor","rootBlendMode","renderThemeColorBadgeColor","renderThemeColorButtonTones","colorButtonMode","renderThemeColorButtonStates","renderThemeColorState","renderInputStatesColorTheme","renderInputStateColorTheme","colorSelectable","renderThemeColorSelectableStates","buildTheme","colorTheme","Map","getScopedTheme","_getCachedTheme","colorScheme_v0","color_v0","layer_v0","colorScheme_v2","layer_v2","theme","sanity","_resolved","_setCachedTheme","rootTheme","schemeCache","toneCache","has"],"mappings":"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"}